<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZennoLab.InterfacesLibrary</name>
    </assembly>
    <members>
        <member name="T:ZennoLab.InterfacesLibrary.CapMonster2.ITessRunnerService">
            <summary>
            
            </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.CapMonster2.ITessRunnerService.Closing">
            <summary>
            
            </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.CapMonster2.ITessRunnerService.InvokeCommand(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="charset"></param>
            <returns></returns>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.CaptchaRecognition.Enums.CaptchaServiceAuthType">
            <summary>auth type of the catpcha service</summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.CaptchaRecognition.Enums.CaptchaServiceAuthType.LoginPassword">
            <summary>Login &amp; pass like decaptcher.cm</summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.CaptchaRecognition.Enums.CaptchaServiceAuthType.SecretKey">
            <summary> Secret key like antigate.com </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.CaptchaRecognition.Enums.CaptchaServiceAuthType.None">
            <summary>  </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.CaptchaRecognition.ICommonCaptchaModuleInterface">
            <summary> Interface for captcha recognition module </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.CaptchaRecognition.ICommonCaptchaModuleInterface.RecognizeCaptcha(System.Drawing.Bitmap,System.Guid)">
            <summary> recognize bitmap without parameters </summary>
            <param name="bmp">image</param>
            <param name="taskId">task id fo ZennoPoster</param>
            <returns>recognition result</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.CaptchaRecognition.ICommonCaptchaModuleInterface.RecognizeCaptcha(System.Drawing.Bitmap,System.Object,System.Guid)">
            <summary> recognize bitmap  </summary>
            <param name="bmp">image</param>
            <param name="parameters">parameters</param>
            <param name="taskId">task id fo ZennoPoster</param>
            <returns>recognition result</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.CaptchaRecognition.ICommonCaptchaModuleInterface.RecognizeCaptcha(System.Byte[],System.Object,System.Guid)">
            <summary> recognize bitmap  </summary>
            <param name="bmp">image bytes</param>
            <param name="parameters">parameters</param>
            <param name="taskId">task id fo ZennoPoster</param>
            <returns>recognition result</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.CaptchaRecognition.ICommonCaptchaModuleInterface.GetBalance">
            <summary>
            get balance
            </summary>
            <returns>balance</returns>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.CaptchaRecognition.IConfigurableCaptchaModule">
            <summary> Interface for module configuration </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.CaptchaRecognition.IConfigurableCaptchaModule.AuthType">
            <summary> Auth type (Login/Pass or secret key) </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.CaptchaRecognition.IConfigurableCaptchaModule.ServiceName">
            <summary> Service name (e.g. antigate.com) </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.CaptchaRecognition.IConfigurableCaptchaModule.Login">
            <summary> Login for service, if required </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.CaptchaRecognition.IConfigurableCaptchaModule.Password">
            <summary> Password for service, if required </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.CaptchaRecognition.IConfigurableCaptchaModule.SecretKey">
            <summary> Secret key for service, if required </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.CaptchaRecognition.IConfigurableCaptchaModule.AdditionalParameters">
            <summary> addtinional parameters, if required </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.CaptchaRecognition.IConfigurableCaptchaModule.AdditionalParametersHint">
            <summary> Hint in the user interface, if required </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.CodeCreator.ICodeRunnerService">
            <summary>  </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.CodeCreator.ICodeRunnerService.InvokeCommand(System.String,System.String,System.String[])">
            <summary>  </summary>
            <param name="sender"> </param>
            <param name="command"></param>
            <param name="args"> </param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.CodeCreator.ICodeRunnerService.InvokeCommandForObject(System.String,System.String,System.Object[])">
            <summary> </summary>
            <param name="sender"></param>
            <param name="command"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.Enums.Email.EmailProtocol">
            <summary> email protocol </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.Enums.Email.EmailWorkStatus">
            <summary> email protocol </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Enums.Email.EmailWorkStatus.Working">
            <summary>
            task is processing
            </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Enums.Email.EmailWorkStatus.Ready">
            <summary>
            task is ready
            </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Enums.Email.EmailWorkStatus.Error">
            <summary>
            error occured
            </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.Installer.IInstallerService">
            <summary>
             Wcf service contract for working with instaler
            </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.Installer.IInstallerService.ExecuteCommand(System.String,System.String)">
            <summary>
             Command execution service
             A full list of command name can be found in ZennoLab.InterfacesLibrary.Installer.ServiceCommand
            </summary>
            <param name="command">command</param>
            <param name="argument">argument</param>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand">
            <summary>
             Commands for the service installer
            </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.Next">
            <summary> click the "Next" button </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.ChooseAllProducts">
            <summary> choice all products on page "Product Selection" </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.InsertPath">
            <summary> set path to install on page "Choice install path" </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.InsertEmail">
            <summary> set login on page "Authorization" </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.InsertPassword">
            <summary> set password on page "Authorization" </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.Authorize">
            <summary> click the "Authorize" button </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.WriteLicence">
            <summary> click the "Write license" button </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.SelectLicenceAutomaticaly">
            <summary> click the "Select auto" button </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.SelectLicenceComplete">
            <summary> click the "Ok" button </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.NotAllowToRun">
            <summary> prohibition start after installation </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.SkipTest">
            <summary> skip test after installation </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.Installer.InstallerServiceCommand.Finish">
            <summary> click the "Finish" button </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.IntelliSearch.IIntelliSearchService">
            <summary> Wcf service contract for working with IntelliSearch </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.IntelliSearch.IIntelliSearchService.SetValue">
            <summary> Set value </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.IntelliSearch.IntelliSearchCommand">
            <summary>
             Commands for the service installer
            </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.IntelliSearch.IntelliSearchCommand.SetValue">
            <summary> click the "set value" button </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.IWcfService">
            <summary>
            Интерфейс базового wcf сервиса
            </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.IWcfService.IsAlive">
            <summary>
            Проверка отклика сервиса
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerCSharpMacroNotifier">
            <summary> Wcf service contract for working with "own c# code" action </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerCSharpMacroNotifier.NotifyCodeChanges(System.String,System.String,System.String)">
            <summary> set new code to action </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectOpener">
            <summary> Wcf service contract for opening files </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectOpener.OpenProject(System.String)">
            <summary> open project </summary>
            <param name="fileName">project file name</param>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand">
            <summary>
             Commands for the service of ProjectMaker
            </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand.RecordNewProject">
            <summary> Record new project </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand.StartRecord">
            <summary> Start record </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand.StopRecord">
            <summary> Stop record </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand.StartIntelliSearch">
            <summary> Start Intelli Search </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand.StartDebug">
            <summary> Start debug </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand.StopDebug">
            <summary> Stop debug </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand.GoToBreakPoint">
            <summary> Debug up to the breakpoint </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand.SaveProjectAs">
            <summary> Save project as </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand.GoToUrl">
            <summary> Navigate to url </summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectMaker.ProjectMakerCommand.OpenProject">
            <summary> Open project </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService">
            <summary> Wcf service contract for working with ProjectMaker </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.RecordNewProject">
            <summary> Record new project </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.StartRecord">
            <summary> Start record </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.StopRecord">
            <summary> Stop record </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.StartIntelliSearch">
            <summary> Start Intelli Search </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.StartDebug">
            <summary> Start debug </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.GoToBreakPoint">
            <summary> Debug up to the breakpoint </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.StopDebug">
            <summary> Stop debug </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.SaveProjectAs">
            <summary> Save project as </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.GoToUrl(System.String)">
             <summary> Navigate to url </summary>
            <param name="url">adress</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.IsSuccesDebug">
            <summary> Is successful debug </summary>
            <returns></returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.IsFinishedDebug">
            <summary> Is finished debug </summary>
            <returns></returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectMaker.IProjectMakerService.OpenProject(System.String)">
             <summary> Open project </summary>
            <param name="path">path to project</param>
             <returns></returns>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IContext">
            <summary>Represents a collection of shared objects that can be accessed by name.</summary>
            <remarks>This interface can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Variables">IZennoPosterProjectModel.Context Property</seealso>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Variables">Context</see> of "project" for getting and setting value to context.
            <code title="Example" description="" lang="C#">
            // get local variable
            object o = project.Context["ObjectName"];
             
            // check existing object
            if(o == null)
            {
                // set value
                project.Context["ObjectName"] = "this is new object";
            }
             
            // return new value
            return project.Context["ObjectName"];</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IContext.Item(System.String)">
            <summary>
            	<para>Get or set the shared object by the specified name.</para>
            </summary>
            <param name="name">
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see></para>
                <para>The name of object.</para>
            </param>
            <value>
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.object.aspx :">System.Object </see></para>
                <para>The object of <see cref="!:http://msdn.microsoft.com/en-us/library/system.object.aspx :">System.Object </see> describing shared object.</para>
            </value>
            <example>
            The following example uses property "<see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IContext.Item(System.String)">Item</see>" (operator []) to access a shared object with name <font color="maroon">"ObjectName"</font>.
            <code title="Example" description="" lang="C#">
            object o = project.Context["ObjectName"];</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IContext.Keys">
            <summary>
            	<para>Get the keys list of context items.</para>
            </summary>
            <value>
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
                <para>The collection objects of <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see> describing keys of context items.</para>
            </value>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables">
            <summary>Represents a collection of global variables that can be accessed by namespace and name. Provides methods to set value.</summary>
            <remarks>This interface can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable Interface</seealso>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.GlobalVariables">GlobalVariables</see> of "project" for getting and setting value of global variable,
            also create a new global variable.
            <code title="Example" description="" lang="C#">
            // get global variable by namespace and name
            // variable "gv" object of interface IGlobalVariable
            IGlobalVariable gv = project.GlobalVariables["MyNamespase", "VariableName"];
             
            // change value of global variable
            gv.Value = "ChangedValue";
             
            // create a new global variable and set value
            project.GlobalVariables.SetVariable("MyNamespase", "NewVariableName", "NewValue");</code><code title="Example2" description="" lang="PHP">
            // get global variable by namespace and name
            // variable "gv" object of interface IGlobalVariable
            $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespase", "VariableName");
             
            // change value of global variable
            $gv-&gt;Value = "ChangedValue";
             
            // create a new global variable and set value
            $project-&gt;GlobalVariables-&gt;SetVariable("MyNamespase", "NewVariableName", "NewValue");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables.SetVariable(System.String,System.String,System.Object)">
            <summary>Sets value or create a new global variable by the specified pair, namespace and name.</summary>
            <param name="nameSpace">
            	
            Type: <see>System.String
                                                        
                                                      </see>
            	
            	<para>
            The namespace of global variable.</para>
            </param>
            <param name="variableName">
            	
            Type: <see>System.String
                                                        
                                                      </see>
            	
            	<para>
            The name of global variable.</para>
            </param>
            <param name="value">
            	
            Type: <see>System.Object
                    
                  </see>
            	<para>
            The name of global variable.</para>
            </param>
            <remarks>If collection is not contains global variable with specified namespace and name, then a new global variable will be created and added to collection with the
            specified value.</remarks>
            <example>
            	<code title="Example" description="" lang="C#">
            // change a value of existing global variable
            project.GlobalVariables.SetVariable("MyNamespase", "ExistingVariableName", "ChangedValue");
             
            // create a new global variable and set value
            project.GlobalVariables.SetVariable("MyNamespase", "NewVariableName", "NewValue");</code>
            	<code title="Example2" description="" lang="PHP">
            // change a value of existing global variable
            $project-&gt;GlobalVariables-&gt;SetVariable("MyNamespase", "ExistingVariableName", "ChangedValue");
             
            // create a new global variable and set value
            $project-&gt;GlobalVariables-&gt;SetVariable("MyNamespase", "NewVariableName", "NewValue");</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables.Item(System.String,System.String)">
            <summary>
            	<para>Get the global variable by the specified pair, namespace and name.</para>
            </summary>
            <param name="nameSpace">
            	
            Type: <see>System.String
                                                        </see>
            	
            	<para>
            The namespace of global variable.</para>
            </param>
            <param name="variableName">
            	
            Type: <see>System.String
                                                        </see>
            	
            	<para>
            The name of global variable.</para>
            </param>
            <remarks>This property uses only for getting necessary global variable. For setting value need use method <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables.SetVariable(System.String,System.String,System.Object)">SetVariable</see>.</remarks>
            <value>
            	
            Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">ZennoLab.InterfacesLibrary.ProjectModel.IGlovalVariable</see>
            	
            	<para>
            The object of <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable</see> describing global variable.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable Interface</seealso>
            <exception caption="KeyNotFoundException" cref="T:System.Collections.Generic.KeyNotFoundException">The exception that is thrown when the pair, namespace and name, specified for accessing a global variable in a collection does not match any pair in the collection.</exception>
            <example>
            The following example uses property "<see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables.Item(System.String,System.String)">Item</see>" (operator []) to access a global variable with namespace <font color="maroon">"MyNamespace"</font> and name
            <font color="maroon">"MyGlobalVariable"</font>.
            <code title="Example" description="" lang="C#">
            IGlobalVariable gv = project.GlobalVariables["MyNamespace", "MyGlobalVariable"];</code><code title="Example2" description="" lang="PHP">
            $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespace", "MyGlobalVariable");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILists">
            <summary>Represents a collection of lists that can be accessed by namespace and name.</summary>
            <remarks>This interface can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Lists">IZennoPosterProjectModel.Lists Property</seealso>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Lists">Lists</see> of "project" for adding a new items into list.
            <code title="Example" description="" lang="C#">
            // get list
            IList&lt;string&gt; list = project.Lists["MyList"];
             
            // show count of list
            System.Windows.Forms.MessageBox.Show(String.Format("Now count of the list is {0}", list.Count), "Count of list");
             
            // add a new items
            list.Add("new item 1");
            list.Add("new item 2");
            list.Add("new item 3");
             
            // show count of list
            System.Windows.Forms.MessageBox.Show(String.Format("Now count of the list is {0}", list.Count), "Count of list");</code><code title="Example2" description="" lang="PHP">
            // get list
            $list = $project-&gt;Lists-&gt;get_Item("MyList");
             
            // show count of list
            System\Windows\Forms\MessageBox::Show(String::Format("Now count of the list is {0}", $list-&gt;Count), "Count of list");
             
            // add a new items
            $list-&gt;Add("new item 1");
            $list-&gt;Add("new item 2");
            $list-&gt;Add("new item 3");
             
            // show count of list
            System\Windows\Forms\MessageBox::Show(String::Format("Now count of the list is {0}", $list-&gt;Count), "Count of list");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILists.Item(System.String)">
            <summary>
            	<para>Get the list by the specified name.</para>
            </summary>
            <param name="listName">
            	<para>
            		
            			
            Type: <see>System.String
                                                        </see>
            			
            The name of list.
            	</para>
            </param>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">IZennoList</see></para>
            	<para>The list of items.</para>
            </value>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Lists">IZennoPosterProjectModel.Lists Property</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables">ITables Interface</seealso>
            <exception caption="KeyNotFoundException" cref="T:System.Collections.Generic.KeyNotFoundException">The exception that is thrown when the name specified for accessing a list in a collection does not match any name in the collection.</exception>
            <example>
            The following example uses property "<see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILists.Item(System.String)">Item</see>" (operator []) to access a list with name <font color="maroon">"MyList"</font>.
            <code title="Example" description="" lang="C#">
            // get list
            var list = project.Lists["MyList"];
             
            // result
            string result = String.Empty;
             
            if (list.Count &gt; 0)
            {
                foreach (string str in list)
                {
                    if (String.IsNullOrWhiteSpace(result)) result = str;
                    else result = String.Format("{0}:{1}", result, str);
                }
            }
             
            // return result
            return result;</code><code title="Example2" description="" lang="PHP">
            // get list
            $list = $project-&gt;Lists-&gt;get_Item("MyList");
             
            // result
            $result = String::Empty;
             
            if ($list-&gt;Count &gt; 0)
            {
                foreach ($str as $list)
                {
                    if (String::IsNullOrWhiteSpace($result)) $result = $str;
                    else $result = String::Format("{0}:{1}", $result, $str);
                }
            }
             
            // return result
            return $result;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile">
            <summary>Gets the current profile.</summary>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Profile">IZennoPosterProjectModel.Profile Property</seealso>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Profile">Profile</see> of "project".
            <code title="Example" description="" lang="C#">
            // get login
            string login = project.Profile.Login;
             
            // set e-mail
            project.Profile.Email = "myemail.@example.com";
             
            // set gender if it's not male
            if (project.Profile.Sex != ProfileSex.Male) project.Profile.Sex = ProfileSex.Male;
             
            // set name
            project.Profile.Name = "HisName";</code><code title="Example2" description="" lang="PHP">
            // get login
            $login = $project-&gt;Profile-&gt;Login;
             
            // set e-mail
            $project-&gt;Profile-&gt;Email = "myemail.@example.com";
             
            // set gender if it's not male
            if ($project-&gt;Profile-&gt;Sex != ProfileSex::Male) $project-&gt;Profile-&gt;Sex = ProfileSex::Male;
             
            // set name
            $project-&gt;Profile-&gt;Name = "HisName";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.RegenerateLogin(System.String)">
            <param name="rule">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>The rule for generation a new login.</para>
            </param>
            <remarks>This method is not change the Login property for current object of IProfile.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that represents a new login.</para>
            </returns>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Login">Login Property</seealso>
            <example>
            The following example uses <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.RegenerateLogin(System.String)">RegenerateLogin</see> method from profile.
            <code title="С# Example" description="" lang="C#">
            // generation a new login with specified rule
            string newLogin = project.Profile.RegenerateLogin("[Eng|4][RndNum|1970|1990]");</code><code title="Example2" description="" lang="PHP">
            // generation a new login with specified rule
            $newLogin = $project-&gt;Profile-&gt;RegenerateLogin("[Eng|4][RndNum|1970|1990]");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ToString">
            <summary>Returns a string that represents the current profile.</summary>
            <remarks>You should remember that all ZennoPoster's structures, actions and methods uses the utf-8 encoding.</remarks>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that represents the current profile.</para>
            </returns>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.FromString(System.String)">FromString Method</seealso>
            <example>
            The following example uses <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ToString">ToString</see> method of profile. This example gets the representation of the profile as string and saves it to the file with
            path: <em>C:\profile.txt</em>.
            <code title="Example" description="" lang="C#">
            // get the in the string format
            string profileAsString = project.Profile.ToString();
            // save it to file D:\profile.txt
            System.IO.File.WriteAllText("C:\\profile.txt", profileAsString, Encoding.UTF8);</code><code title="Example2" description="" lang="PHP">
            // get the in the string format
            $profileAsString = $project-&gt;Profile-&gt;ToString();
            // save it to file D:\profile.txt
            System\IO\File::WriteAllText("C:\\profile.txt", $profileAsString, System\Text\Encoding::UTF8);</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.FromString(System.String)">
            <summary>Loads the profile data from specified string.</summary>
            <param name="source">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A string that represents the profile data.</para>
            </param>
            <remarks>You should remember that all ZennoPoster's structures, actions and methods uses the utf-8 encoding.</remarks>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ToString">ToString Method</seealso>
            <example>
            The following example uses <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.FromString(System.String)">FromString</see> method of profile. First of all it loads the data from file C:\profile.txt, after set this data to the
            current profile.
            <code title="Example" description="" lang="CS">
            // load profile data from file C:\profile.txt
            string data = System.IO.File.ReadAllText("C:\\profile.txt", Encoding.UTF8);
            // set the profile data
            project.Profile.FromString(data);</code><code title="Example2" description="" lang="PHP">
            // load profile data from file C:\profile.txt
            $data = System\IO\File::ReadAllText("C:\\profile.txt", System\Text\Encoding::UTF8);
            // set the profile data
            $project-&gt;Profile-&gt;FromString($data);</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Name">
            <summary>Gets or sets the name.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The name of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Name">Name</see> of profile.
            <code title="Example" description="" lang="C#">
            // get name
            string name = project.Profile.Name;
             
            // set name
            project.Profile.Name = "MyName";</code><code title="Example2" description="" lang="PHP">
            // get name
            $name = $project-&gt;Profile-&gt;Name;
             
            // set name
            $project-&gt;Profile-&gt;Name = "MyName";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Surname">
            <summary>Gets or sets the surname.</summary>
            <value>
            	<para>
            		
            			
            Type: <see>System.String 
                    
                  </see> 
            		
            	</para>
            	<para>
            		
            			The surname of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Surname">Surname</see> of profile.
            <code title="Example" description="" lang="C#">
            // get surname
            string surname = project.Profile.Surname;
             
            // set surname
            project.Profile.Surname = "MySurname";</code><code title="Example2" description="" lang="PHP">
            // get surname
            $surname = $project-&gt;Profile-&gt;Surname;
             
            // set surname
            project-&gt;Profile-&gt;Surname = "MySurname";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Sex">
            <summary>Gets or sets the gender.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Enums.ProfileSex">ZennoLab.InterfacesLibrary.ProjectModel.Enums.ProfileSex</see></para>
            	<para>The gender of profile.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Enums.ProfileSex">ProfileSex Enumeration</seealso>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Sex">Sex</see> of profile.
            <code title="Example" description="" lang="C#">
            // get gender
            ProfileSex gender = project.Profile.Sex;
             
            // set gender
            project.Profile.Sex = ProfileSex.Male;</code><code title="Example2" description="" lang="PHP">
            // get gender
            $gender = $project-&gt;Profile-&gt;Sex;
             
            // set gender
            $project-&gt;Profile-&gt;Sex = ProfileSex::Male;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Age">
            <summary>Gets or sets the age.</summary>
            <value>
            	
            Type:
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The age of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Age">Age</see> of profile.
            <code title="Example" description="" lang="C#">
            // get age
            int age = project.Profile.Age;
             
            // set age
            project.Profile.Age = 28;</code><code title="Example2" description="" lang="PHP">
            // get age
            $age = $project-&gt;Profile-&gt;Age;
             
            // set age
            $project-&gt;Profile-&gt;Age = 28;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.BornDay">
            <summary>Gets or sets the born day.</summary>
            <value>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The born day of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.BornDay">BornDay</see> of profile.
            <code title="Example" description="" lang="C#">
            // get born day
            string bornDay = project.Profile.BornDay;
             
            // set born day
            project.Profile.BornDay = 18;</code><code title="Example2" description="" lang="PHP">
            // get born day
            $bornDay = $project-&gt;Profile-&gt;BornDay;
             
            // set born day
            $project-&gt;Profile-&gt;BornDay = 18;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.BornMonth">
            <summary>Gets or sets the born month.</summary>
            <value>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The born month of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.BornMonth">BornMonth</see> of profile.
            <code title="Example" description="" lang="C#">
            // get born month
            string bornMonth = project.Profile.BornMonth;
             
            // set born month
            project.Profile.BornMonth = 6;</code><code title="Example2" description="" lang="PHP">
            // get born month
            $bornMonth = $project-&gt;Profile-&gt;BornMonth;
             
            // set born month
            $project-&gt;Profile-&gt;BornMonth = 6;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.BornYear">
            <summary>Gets or sets the born year.</summary>
            <value>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The born year of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.BornYear">BornYear</see> of profile.
            <code title="Example" description="" lang="C#">
            // get born year
            string bornMonth = project.Profile.BornYear;
             
            // set born year
            project.Profile.BornMonth = 1589;</code><code title="Example2" description="" lang="PHP">
            // get born year
            $bornMonth = $project-&gt;Profile-&gt;BornYear;
             
            // set born year
            $project-&gt;Profile-&gt;BornMonth = 1589;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Country">
            <summary>Gets or sets the country.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The country of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Country">Country</see> of profile.
            <code title="Example" description="" lang="C#">
            // get country
            string country = project.Profile.Country;
             
            // set country
            project.Profile.Country = "MyCountry";</code><code title="Example2" description="" lang="PHP">
            // get country
            $country = $project-&gt;Profile-&gt;Country;
             
            // set country
            $project-&gt;Profile-&gt;Country = "MyCountry";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.CurrentRegion">
            <summary>Gets or sets the current region.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The current region of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.CurrentRegion">CurrentRegion</see> of profile.
            <code title="Example" description="" lang="C#">
            // get region
            string region = project.Profile.CurrentRegion;
             
            // set region
            project.Profile.CurrentRegion = "MyRegion";</code><code title="Example2" description="" lang="PHP">
            // get region
            $region = $project-&gt;Profile-&gt;CurrentRegion;
             
            // set region
            $project-&gt;Profile-&gt;CurrentRegion = "MyRegion";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Town">
            <summary>Gets or sets the town.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The town of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Town">Town</see> of profile.
            <code title="Example" description="" lang="C#">
            // get town
            string region = project.Profile.Town;
             
            // set town
            project.Profile.Town = "MyTown";</code><code title="Example2" description="" lang="PHP">
            // get town
            $region = $project-&gt;Profile-&gt;Town;
             
            // set town
            $project-&gt;Profile-&gt;Town = "MyTown";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Phone">
            <summary>Gets or sets the phone.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The phone of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Phone">Phone</see> of profile.
            <code title="Example" description="" lang="C#">
            // get phone
            string phone = project.Profile.Phone;
             
            // set phone
            project.Profile.Phone = "MyPhone";</code><code title="Example2" description="" lang="PHP">
            // get phone
            $phone = $project-&gt;Profile-&gt;Phone;
             
            // set phone
            $project-&gt;Profile-&gt;Phone = "MyPhone";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ZipCode">
            <summary>Gets or sets the zip code.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The zip code of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ZipCode">ZipCode</see> of profile.
            <code title="Example" description="" lang="C#">
            // get zip code
            string zipCode = project.Profile.ZipCode;
             
            // set zip code
            project.Profile.ZipCode = "MyZipCode";</code><code title="Example2" description="" lang="PHP">
            // get zip code
            $zipCode = $project-&gt;Profile-&gt;ZipCode;
             
            // set zip code
            $project-&gt;Profile-&gt;ZipCode = "MyZipCode";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Language">
            <summary>Gets or sets the language.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The language of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Language">Language</see> of profile.
            <code title="Example" description="" lang="C#">
            // get language
            string language = project.Profile.Language;
             
            // set language
            project.Profile.Language = "MyLanguage";</code><code title="Example2" description="" lang="PHP">
            // get language
            $language = $project-&gt;Profile-&gt;Language;
             
            // set language
            $project-&gt;Profile-&gt;Language = "MyLanguage";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Login">
            <summary>Gets or sets the login.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The login of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Login">Login</see> of profile.
            <code title="Example" description="" lang="C#">
            // get login
            string login = project.Profile.Login;
             
            // set login
            project.Profile.Login = "MyLogin";</code><code title="Example2" description="" lang="PHP">
            // get login
            $login = $project-&gt;Profile-&gt;Login;
             
            // set login
            $project-&gt;Profile-&gt;Login = "MyLogin";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.NickName">
            <summary>Gets or sets the nick name.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The nick name of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.NickName">NickName</see> of profile.
            <code title="Example" description="" lang="C#">
            // get nick name
            string nickName = project.Profile.NickName;
             
            // set nick name
            project.Profile.NickName = "MyNickName";</code><code title="Example2" description="" lang="PHP">
            // get nick name
            $nickName = $project-&gt;Profile-&gt;NickName;
             
            // set nick name
            $project-&gt;Profile-&gt;NickName = "MyNickName";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Password">
            <summary>Gets or sets the password.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The password of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Password">Password</see> of profile.
            <code title="Example" description="" lang="C#">
            // get password
            string password = project.Profile.Password;
             
            // set password
            project.Profile.Password = "MyPassword";</code><code title="Example2" description="" lang="PHP">
            // get password
            $password = $project-&gt;Profile-&gt;Password;
             
            // set password
            $project-&gt;Profile-&gt;Password = "MyPassword";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Email">
            <summary>Gets or sets the e-mail.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The e-mail of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Email">Email</see> of profile.
            <code title="Example" description="" lang="C#">
            // get e-mail
            string email = project.Profile.Email;
             
            // set e-mail
            project.Profile.Email = "MyEmail";</code><code title="Example2" description="" lang="PHP">
            // get e-mail
            $email = $project-&gt;Profile-&gt;Email;
             
            // set e-mail
            $project-&gt;Profile-&gt;Email = "MyEmail";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.EmailPassword">
            <summary>Gets or sets the e-mail password.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The e-mail password of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.EmailPassword">EmailPassword</see> of profile.
            <code title="Example" description="" lang="C#">
            // get e-mail password
            string emailPassword = project.Profile.EmailPassword;
             
            // set e-mail password
            project.Profile.EmailPassword = "MyEmailPassword";</code><code title="Example2" description="" lang="PHP">
            // get e-mail password
            $emailPassword = $project-&gt;Profile-&gt;EmailPassword;
             
            // set e-mail password
            $project-&gt;Profile-&gt;EmailPassword = "MyEmailPassword";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.SecretQuestionAnswer1">
            <summary>Gets or sets the answer on the first secret question.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">answer on the first secret question</font> of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.SecretQuestionAnswer1">SecretQuestionAnswer1</see> of profile.
            <code title="Example" description="" lang="C#">
            // get answer on the first secret question
            string secretQuestionAnswer1 = project.Profile.SecretQuestionAnswer1;
             
            // set answer on the first secret question
            project.Profile.SecretQuestionAnswer1 = "12341234";</code><code title="Example2" description="" lang="PHP">
            // get answer on the first secret question
            $secretQuestionAnswer1 = $project-&gt;Profile-&gt;SecretQuestionAnswer1;
             
            // set answer on the first secret question
            $project-&gt;Profile-&gt;SecretQuestionAnswer1 = "12341234";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.SecretQuestionAnswer2">
            <summary>Gets or sets the answer on the second secret question.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">answer on the second secret question</font> of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.SecretQuestionAnswer2">SecretQuestionAnswer2</see> of profile.
            <code title="Example" description="" lang="C#">
            // get answer on the second secret question
            string secretQuestionAnswer2 = project.Profile.SecretQuestionAnswer2;
             
            // set answer on the second secret question
            project.Profile.SecretQuestionAnswer2 = "12341234";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Interest">
            <summary>Gets or sets the interest.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The interest of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Interest">Interest</see> of profile.
            <code title="Example" description="" lang="C#">
            // get interest
            string interest = project.Profile.Interest;
             
            // set interest
            project.Profile.Interest = "beer";</code><code title="Example2" description="" lang="PHP">
            // get interest
            $interest = $project-&gt;Profile-&gt;Interest;
             
            // set interest
            $project-&gt;Profile-&gt;Interest = "beer";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.AcceptCharset">
            <summary>Gets or sets the character sets that are acceptable.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">character sets that are acceptable</font> of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.AcceptCharset">AcceptCharset</see> of profile.
            <code title="Example" description="" lang="C#">
            // get character sets that are acceptable
            string acceptCharset = project.Profile.AcceptCharset;
             
            // set character sets that are acceptable
            project.Profile.AcceptCharset = "utf-8";</code><code title="Example2" description="" lang="PHP">
            // get character sets that are acceptable
            $acceptCharset = $project-&gt;Profile-&gt;AcceptCharset;
             
            // set character sets that are acceptable
            $project-&gt;Profile-&gt;AcceptCharset = "utf-8";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.AcceptEncoding">
            <summary>Gets or sets acceptable encodings.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The acceptable encodings of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.AcceptEncoding">AcceptEncoding</see> of profile.
            <code title="Example" description="" lang="C#">
            // get acceptable encodings
            string acceptEncoding = project.Profile.AcceptEncoding;
             
            // set acceptable encodings
            project.Profile.AcceptEncoding = "gzip,deflate,sdch";</code><code title="Example2" description="" lang="PHP">
            // get acceptable encodings
            $acceptEncoding = $project-&gt;Profile-&gt;AcceptEncoding;
             
            // set acceptable encodings
            $project-&gt;Profile-&gt;AcceptEncoding = "gzip,deflate,sdch";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.AcceptLanguage">
            <summary>Gets or sets acceptable languages for response.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">acceptable languages for response</font> of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.AcceptLanguage">AcceptLanguage</see> of profile.
            <code title="Example" description="" lang="C#">
            // get acceptable languages for response
            string acceptLanguage = project.Profile.AcceptLanguage;
             
            // set acceptable languages for response
            project.Profile.AcceptLanguage = "en-US";</code><code title="Example2" description="" lang="PHP">
            // get acceptable languages for response
            $acceptLanguage = $project-&gt;Profile-&gt;AcceptLanguage;
             
            // set acceptable languages for response
            $project-&gt;Profile-&gt;AcceptLanguage = "en-US";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgent">
            <summary>Gets or sets the user agent string of the user agent.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">user agent string of the user agent</font> of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgent">UserAgent</see> of profile.
            <code title="Example" description="" lang="C#">
            // get user agent string of the user agent
            string userAgent = project.Profile.UserAgent;
             
            // set user agent string of the user agent
            project.Profile.UserAgent = "Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/12.0";</code><code title="Example2" description="" lang="PHP">
            // get user agent string of the user agent
            $userAgent = $project-&gt;Profile-&gt;UserAgent;
             
            // set user agent string of the user agent
            $project-&gt;Profile-&gt;UserAgent = "Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/12.0";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.HTTPAccept">
            <summary>Gets or sets the content types that are acceptable.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">content types that are acceptable</font> of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.HTTPAccept">HTTPAccept</see> of profile.
            <code title="Example" description="" lang="C#">
            // get content types that are acceptable
            string HTTPAccept = project.Profile.HTTPAccept;
             
            // set acceptable languages for response
            project.Profile.HTTPAccept = "text/plain";</code><code title="Example2" description="" lang="PHP">
            // get content types that are acceptable
            $HTTPAccept = $project-&gt;Profile-&gt;HTTPAccept;
             
            // set acceptable languages for response
            $project-&gt;Profile-&gt;HTTPAccept = "text/plain";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentAppCodeName">
            <summary>Gets or set the code name of the browser.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">code name of the browser</font> of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentAppCodeName">UserAgentAppCodeName</see> of profile.
            <code title="Example" description="" lang="C#">
            // get code name of the browser
            string userAgentAppCodeName = project.Profile.UserAgentAppCodeName;
             
            // set code name of the browser
            project.Profile.UserAgentAppCodeName = "Mozilla";</code><code title="Example2" description="" lang="PHP">
            // get code name of the browser
            $userAgentAppCodeName = $project-&gt;Profile-&gt;UserAgentAppCodeName;
             
            // set code name of the browser
            $project-&gt;Profile-&gt;UserAgentAppCodeName = "Mozilla";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentAppName">
            <summary>Gets or set the name of the browser.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">name of the browser</font> of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentAppName">UserAgentAppName</see> of profile.
            <code title="Example" description="" lang="C#">
            // get name of the browser
            string userAgentAppName = project.Profile.UserAgentAppName;
             
            // set name of the browser
            project.Profile.UserAgentAppName = "Netscape";</code><code title="Example2" description="" lang="PHP">
            // get name of the browser
            $userAgentAppName = $project-&gt;Profile-&gt;UserAgentAppName;
             
            // set name of the browser
            $project-&gt;Profile-&gt;UserAgentAppName = "Netscape";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentAppVersion">
            <summary>Gets or set the version information of the browser.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">version information of the browser</font> of profile.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentAppVersion">UserAgentAppVersion</see> of profile.
            <code title="Example" description="" lang="C#">
            // get version information of the browser
            string userAgentAppVersion = project.Profile.UserAgentAppVersion;
             
            // set version information of the browser
            project.Profile.UserAgentAppVersion = "5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.83 Safari/537.1";</code><code title="Example2" description="" lang="PHP">
            // get version information of the browser
            $userAgentAppVersion = $project-&gt;Profile-&gt;UserAgentAppVersion;
             
            // set version information of the browser
            $project-&gt;Profile-&gt;UserAgentAppVersion = "5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.83 Safari/537.1";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentBrowserLanguage">
            <summary>Gets or sets the browser language.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The
            			<font size="2" face="Verdana">browser language.</font>
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentCpuClass">UserAgentCpuClass</see> of profile.
            <code title="Example" description="" lang="C#">
            // get browser language
            string browserLanguage = project.Profile.UserAgentBrowserLanguage;
             
            // set browser language
            project.Profile.UserAgentBrowserLanguage = "en";</code><code title="Example2" description="" lang="PHP">
            // get browser language
            $browserLanguage = $project-&gt;Profile-&gt;UserAgentBrowserLanguage;
             
            // set browser language
            project-&gt;Profile-&gt;UserAgentBrowserLanguage = "en";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentCpuClass">
            <summary>Gets or sets the cpu class.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2"><font face="Verdana">cpu class</font></font>.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentCpuClass">UserAgentCpuClass</see> of profile.
            <code title="Example" description="" lang="C#">
            // get cpu class
            string cpuClass = project.Profile.UserAgentCpuClass;
             
            // set cpu class
            project.Profile.UserAgentCpuClass = "x86";</code><code title="Example2" description="" lang="PHP">
            // get cpu class
            $cpuClass = $project-&gt;Profile-&gt;UserAgentCpuClass;
             
            // set cpu class
            $project-&gt;Profile-&gt;UserAgentCpuClass = "x86";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentLanguage">
            <summary>Gets or sets the system language.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The system language.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentLanguage">UserAgentLanguage</see> of profile.
            <code title="Example" description="" lang="C#">
            // get system language
            string systemLanguage = project.Profile.UserAgentLanguage;
             
            // set system language
            project.Profile.UserAgentLanguage = "en";</code><code title="Example2" description="" lang="PHP">
            // get system language
            $systemLanguage = $project-&gt;Profile-&gt;UserAgentLanguage;
             
            // set system language
            $project-&gt;Profile-&gt;UserAgentLanguage = "en";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentOsCpu">
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentOsCpu">UserAgentOsCpu</see> of profile.
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentPlatform">
            <summary>Gets or sets the current platform.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The current platform.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentProduct">UserAgentProduct</see> of profile.
            <code title="Example" description="" lang="C#">
            // get current platform
            string platform = project.Profile.UserAgentPlatform;
             
            // set current platform
            project.Profile.UserAgentPlatform = "Win32";</code><code title="Example2" description="" lang="PHP">
            // get current platform
            $platform = $project-&gt;Profile-&gt;UserAgentPlatform;
             
            // set current platform
            $project-&gt;Profile-&gt;UserAgentPlatform = "Win32";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentProduct">
            <summary>Gets or sets the product name.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">product name</font>.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentProduct">UserAgentProduct</see> of profile.
            <code title="Example" description="" lang="C#">
            // get product name
            string product = project.Profile.UserAgentProduct;
             
            // set product name
            project.Profile.UserAgentProduct = "Gecko";</code><code title="Example2" description="" lang="PHP">
            // get product name
            $product = $project-&gt;Profile-&gt;UserAgentProduct;
             
            // set product name
            $project-&gt;Profile-&gt;UserAgentProduct = "Gecko";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentProductSub">
            <summary>Gets or sets the product sub.</summary>
            <value>
            	<para>
            		
            			
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            		
            	</para>
            	<para>
            		
            			The <font size="2" face="Verdana">product sub</font>.
            		
            	</para>
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.UserAgentProductSub">UserAgentProductSub</see> of profile.
            <code title="Example" description="" lang="C#">
            // get product sub
            string product = project.Profile.UserAgentProductSub;
             
            // set product sub
            project.Profile.UserAgentProductSub = "20030107";</code><code title="Example2" description="" lang="PHP">
            // get product sub
            $product = $project-&gt;Profile-&gt;UserAgentProductSub;
             
            // set product sub
            $project-&gt;Profile-&gt;UserAgentProductSub = "20030107";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.AvailScreenHeight">
            <summary>Gets or sets the height of the screen (excluding the Windows Taskbar).</summary>
            <value>
            	
            Type:
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The avail screen height of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.AvailScreenHeight">AvailScreenHeight</see> of profile.
            <code title="Example" description="" lang="C#">
            // get avail screen height
            int availScreenHeight = project.Profile.AvailScreenHeight;
             
            // set avail screen height
            project.Profile.AvailScreenHeight = 750;</code><code title="Example2" description="" lang="PHP">
            // get avail screen height
            $availScreenHeight = $project-&gt;Profile-&gt;AvailScreenHeight;
             
            // set avail screen height
            $project-&gt;Profile-&gt;AvailScreenHeight = 750;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.AvailScreenWidth">
            <summary>Gets or sets the width of the screen (excluding the Windows Taskbar).</summary>
            <value>
            	
            Type:
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The avail screen width of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.AvailScreenWidth">AvailScreenWidth</see> of profile.
            <code title="Example" description="" lang="C#">
            // get avail screen width
            int availScreenWidth = project.Profile.AvailScreenWidth;
             
            // set avail screen width
            project.Profile.AvailScreenWidth = 1024;</code><code title="Example2" description="" lang="PHP">
            // get avail screen width
            $availScreenWidth = $project-&gt;Profile-&gt;AvailScreenWidth;
             
            // set avail screen width
            $project-&gt;Profile-&gt;AvailScreenWidth = 1024;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.OuterHeightShift">
            <summary>Gets or sets the height of the header and screen frame.</summary>
            <value>
            	
            Type: 
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The outer height shift of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.OuterHeightShift">OuterHeightShift</see> of profile.
            <code title="Example" description="" lang="C#">
            // get outer height shift
            string outerHeightShift = project.Profile.OuterHeightShift;
             
            // set outer height shift
            project.Profile.OuterHeightShift = 101;</code><code title="Example2" description="" lang="PHP">
            // get outer height shift
            $outerHeightShift = $project-&gt;Profile-&gt;OuterHeightShift;
             
            // set outer height shift
            $project-&gt;Profile-&gt;OuterHeightShift = 101;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.OuterWidthShift">
            <summary>Gets or sets the width of the screen frame.</summary>
            <value>
            	
            Type:
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The outer width shift of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.OuterWidthShift">OuterWidthShift</see> of profile.
            <code title="Example" description="" lang="C#">
            // get outer width shift
            string widthHeightShift = project.Profile.OuterWidthShift;
             
            // set outer width shift
            project.Profile.OuterWidthShift = 16;</code><code title="Example2" description="" lang="PHP">
            // get outer width shift
            $widthHeightShift = $project-&gt;Profile-&gt;OuterWidthShift;
             
            // set outer width shift
            $project-&gt;Profile-&gt;OuterWidthShift = 16;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.OuterHeight">
            <summary>Gets the total height of the screen.</summary>
            <value>
            	
            Type: 
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The outer height of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.OuterHeight">OuterHeight</see> of profile.
            <code title="Example" description="" lang="C#">
            // get outer height
            string outerHeight = project.Profile.OuterHeight;</code><code title="Example2" description="" lang="PHP">
            // get outer height
            $outerHeight = $project-&gt;Profile-&gt;OuterHeight;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.OuterWidth">
            <summary>Gets the total width of the screen.</summary>
            <value>
            	
            Type:
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The outer width of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.OuterWidth">OuterWidth</see> of profile.
            <code title="Example" description="" lang="C#">
            // get outer width
            string widthHeight = project.Profile.OuterWidth;</code><code title="Example2" description="" lang="PHP">
            // get outer width
            $widthHeight = $project-&gt;Profile-&gt;OuterWidth;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ScreenLeft">
            <summary>Gets or sets the x coordinate of the window relative to the screen.</summary>
            <value>
            	
            Type:
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The <font size="2" face="Verdana">x coordinate of the window relative to the screen</font> of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ScreenLeft">ScreenLeft</see> of profile.
            <code title="Example" description="" lang="C#">
            // get x coordinate of the window relative to the screen
            int screenLeft = project.Profile.ScreenLeft;
             
            // set x coordinate of the window relative to the screen
            project.Profile.ScreenLeft = 20;</code><code title="Example2" description="" lang="PHP">
            // get x coordinate of the window relative to the screen
            $screenLeft = $project-&gt;Profile-&gt;ScreenLeft;
             
            // set x coordinate of the window relative to the screen
            $project-&gt;Profile-&gt;ScreenLeft = 20;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ScreenTop">
            <summary>Gets or sets the y coordinate of the window relative to the screen.</summary>
            <value>
            	
            Type:
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The y <font size="2" face="Verdana">coordinate of the window relative to the screen</font> of profile.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ScreenTop">ScreenTop</see> of profile.
            <code title="Example" description="" lang="C#">
            // get y coordinate of the window relative to the screen
            int screenTop = project.Profile.ScreenTop;
             
            // set y coordinate of the window relative to the screen
            project.Profile.ScreenTop = 20;</code><code title="Example2" description="" lang="PHP">
            // get y coordinate of the window relative to the screen
            $screenTop = $project-&gt;Profile-&gt;ScreenTop;
             
            // set y coordinate of the window relative to the screen
            $project-&gt;Profile-&gt;ScreenTop = 20;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ScreenSizeHeight">
            <summary>Gets or sets the height of current window.</summary>
            <value>
            	
            Type: 
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The height of current window.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ScreenSizeHeight">ScreenSizeHeight</see> of profile.
            <code title="Example" description="" lang="C#">
            // get screen height
            int height = project.Profile.ScreenSizeHeight;
             
            // set screen height
            project.Profile.ScreenSizeHeight = 600;</code><code title="Example2" description="" lang="PHP">
            // get screen height
            $height = $project-&gt;Profile-&gt;ScreenSizeHeight;
             
            // set screen height
            $project-&gt;Profile-&gt;ScreenSizeHeight = 600;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ScreenSizeWidth">
            <summary>Gets or sets the width of current window.</summary>
            <value>
            	
            Type:
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The width of current window.
            	
            </value>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.ScreenSizeWidth">ScreenSizeWidth</see> of profile.
            <code title="Example" description="" lang="C#">
            // get screen width
            int width = project.Profile.ScreenSizeWidth;
             
            // set screen width
            project.Profile.ScreenSizeWidth = 800;</code><code title="Example2" description="" lang="PHP">
            // get screen width
            $width = $project-&gt;Profile-&gt;ScreenSizeWidth;
             
            // set screen width
            $project-&gt;Profile-&gt;ScreenSizeWidth = 800;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables">
            <summary>Represents a collection of tables that can be accessed by name.</summary>
            <remarks>This interface can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Tables">IZennoPosterProjectModel.Tables Property</seealso>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Tables">Tables</see> of "project" for getting table with name "MyTable"<font color="black">.</font><code title="Example" description="" lang="C#">
            // get table
            IZennoTable table = project.Tables["MyTable"];
             
            // set columns separator
            table.ColSeparator = ":";
             
            // add row
            table.AddRow("1:2:3:4:5");</code><code title="Example2" description="" lang="PHP">
            // get table
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // set columns separator
            $table-&gt;ColSeparator = ":";
             
            // add row
            $table-&gt;AddRow("1:2:3:4:5");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables.Item(System.String)">
            <summary>
            	<para>Get the table by the specified name.</para>
            </summary>
            <param name="tableName">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	<para>
            The name of table.</para>
            </param>
            <remarks>This property uses only for getting necessary table.</remarks>
            <value>
            	
            Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable</see>
            	
            	<para>
            The object of <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> describing the table.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable Interface</seealso>
            <exception caption="KeyNotFoundException" cref="T:System.Collections.Generic.KeyNotFoundException">The exception that is thrown when the name specified for accessing a table in a collection does not match any name in the collection.</exception>
            <example>
            The following example uses property "<see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables.Item(System.String)">Item</see>" (operator []) to access a table with name <font color="maroon">"MyTable"</font>.
            <code title="Example" description="" lang="C#">
            // get table
            IZennoTable table = project.Tables["MyTable"];</code><code title="Example2" description="" lang="PHP">
            // get table
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IContextExt">
            <summary>Represents a collection of shared objects that can be accessed by name.</summary>
            <remarks>This interface can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Variables">IZennoPosterProjectModel.Context Property</seealso>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Variables">Context</see> of "project" for getting and setting value to context.
            <code title="Example" description="" lang="C#">
            // get local variable
            object o = project.Context["ObjectName"];
             
            // check existing object
            if(o == null)
            {
                // set value
                project.Context["ObjectName"] = "this is new object";
            }
             
            // return new value
            return project.Context["ObjectName"];</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IContextExt.IsInterrupted">
            <summary>Get or set a info about thread interrupting.</summary>
            <returns>
            	<para>Type: <see>System.String</see></para>
            	<para>An information about thread interrupting.</para>
            </returns>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IContextExt.TaskId">
            <summary>Get or set a guid of executed task.</summary>
            <returns>
            	<para>Type: <see>System.Guid</see></para>
            	<para>Guid of executed task.</para>
            </returns>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.Enums.ProfileSex">
            <summary>Specifies gender of the profile data.</summary>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile">IProfile Interface</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile.Sex">IProfile.Sex Property</seealso>
            <example>
            	
            The following code example uses the <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Enums.ProfileSex">ProfileSex</see>
            	
            enumeration for detected gender of the current profile data.
            	<code title="Example" description="" lang="C#">
            // get gender
            ProfileSex gender = project.Profile.Sex;
             
            if (gender == ProfileSex.Female) return "female";
            return "male";</code>
            	<code title="Example2" description="" lang="PHP">
            // get gender
            $gender = $project-&gt;Profile.Sex;
             
            if ($gender == ProfileSex::Female) return "female";
            return "male";</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectModel.Enums.ProfileSex.Male">
            <summary>The male gender.</summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectModel.Enums.ProfileSex.Female">
            <summary>The female gender.</summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">
            <summary>Represents the data of the global variable.</summary>
            <remarks>This interface can be used in action OwnCode of ProjectMaker.</remarks>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables">IGlobalVariables Interface</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable</see> Interface for getting information about global variable.
            <code title="Example" description="" lang="C#">
            // get a global variable
            IGlobalVariable gv = project.GlobalVariables["MyNamespace", "MyGlobalVariable"];
             
            // get comment for current global variable
            string comment = gv.Comment;
            // if value is empty then set comment for global variable
            if (String.IsNullOrWhiteSpace(comment)) gv.Comment = "Set the comment for this global variable";
             
            // get name of global variable
            string name = gv.Name;
            // get namespace of global variable
            string @namespace = gv.Namespace;
            // get value of global variable
            object value = gv.Value;
             
            // show message about variable
            System.Windows.Forms.MessageBox.Show(String.Format("Global variable value is {0}; comment {1}", value, comment), 
                    String.Format("Information about variable {0} from namespace {1}", name, @namespace));</code><code title="Example2" description="" lang="PHP">
            // get a global variable
            $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespace", "MyGlobalVariable");
             
            // get comment for current global variable
            $comment = $gv-&gt;Comment;
            // if value is empty then set comment for global variable
            if (String::IsNullOrWhiteSpace($comment)) $gv-&gt;Comment = "Set the comment for this global variable";
             
            // get name of global variable
            $name = $gv-&gt;Name;
            // get namespace of global variable
            $namespace = $gv-&gt;Namespace;
            // get value of global variable
            $value = $gv-&gt;Value;
             
            // show message about variable
            System\Windows\Forms\MessageBox::Show(String::Format("Global variable: value is {0}; comment {1}", $value, $comment), 
                    String::Format("Information about variable {0} from namespace {1}", $name, $namespace));</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable.ToString">
            <summary>
            	
            Returns a string that represents the current global variable.
            </summary>
            <returns>
            	
            Type: <see>System.String
                    
                  </see>
            	
            	
            		A string that represents the current global variable.
            	
            </returns>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables">IGlobalVariables Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable Interface</seealso>
            <example>
            	
            The following example converts an <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable</see>
            	
            		object using the default <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable.ToString">ToString</see>
            	
            method.
            	<code title="Example" description="" lang="C#">
            // get global variable
            IGlobalVariable gv = project.GlobalVariables["MyNamespace", "MyGlobalVariable"];
             
            // convert global variable to string
            string stringGlobalVariable = gv.ToString();</code>
            	<code title="Example2" description="" lang="PHP">
            // get global variable
            $gv = $project-&gt;GlobalVariables["MyNamespace", "MyGlobalVariable"];
             
            // convert global variable to string
            $stringGlobalVariable = $gv-&gt;ToString();</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable.Name">
            <summary>Gets or sets name of global variable.</summary>
            <value>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String</see>
            	
            	<para>
            The name of global variable.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables">IGlobalVariables Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable Interface</seealso>
            <example>
            The following example demonstrates using <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable.Name">Name</see> property.
            <code title="Example" description="" lang="C#">
            // get global variable
            IGlobalVariable gv = project.GlobalVariables["MyNamespace", "MyGlobalVariable"];
             
            // get name of current global variable
            string name = gv.Name;
            // set name of global variable
            gv.Name = "NewName";</code><code title="Example2" description="" lang="PHP">
            // get global variable
            $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespace", "MyGlobalVariable");
             
            // get name of current global variable
            $name = $gv-&gt;Name;
            // set name of global variable
            $gv-&gt;Name = "NewName";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable.Value">
            <summary>Gets or sets value of global variable.</summary>
            <value>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/dd264741.aspx">dynamic</see>
            	
            	<para>
            The value of global variable.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables">IGlobalVariables Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable Interface</seealso>
            <example>
            The following example demonstrates using <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable.Value">Value</see> property.
            <code title="Example" description="In this example value of global variable cast to System.Object. But it's not necessary, because Value property is dynamic and can be any type." lang="C#">
            // get global variable
            IGlobalVariable gv = project.GlobalVariables["MyNamespace", "MyGlobalVariable"];
             
            // get value of global variable
            object value = gv.Value;
             
            // set value of global variable
            gv.Value = 0;</code><code title="Example2" description="" lang="PHP">
            // get global variable
            $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespace", "MyGlobalVariable");
             
            // get value of global variable
            $value = $gv-&gt;Value;
             
            // set value of global variable
            $gv-&gt;Value = 0;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable.Namespace">
            <summary>Gets or sets namespace of global variable.</summary>
            <value>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            	
            	<para>
            The namespace of global variable.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables">IGlobalVariables Interface</seealso>
            <example>
            The following example demonstrates using <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable.Namespace">Namespace</see> property.
            <code title="Example" description="" lang="C#">
            // get global variable
            IGlobalVariable gv = project.GlobalVariables["MyNamespace", "MyGlobalVariable"];
             
            // get namespace of current global variable
            string @namespace = gv.Namespace;
            // set namespace of global variable
            gv.Namespace = "NewNamespace";</code><code title="Example2" description="" lang="PHP">
            // get global variable
            $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespace", "MyGlobalVariable");
             
            // get namespace of current global variable
            $namespace = $gv-&gt;Namespace;
            // set namespace of global variable
            $gv-&gt;Namespace = "NewNamespace";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable.Comment">
            <summary>Gets or sets comment for global variable.</summary>
            <value>
            	
            Type: <see>System.String
                                                        </see>
            	
            	<para>
            The comment of global variable.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables">IGlobalVariables Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable Interface</seealso>
            <example>
            The following example demonstrates using <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable.Comment">Comment</see> property.
            <code title="Example" description="" lang="C#">
            // get global variable
            IGlobalVariable gv = project.GlobalVariables["MyNamespace", "MyGlobalVariable"];
             
            // get comment for current global variable
            string comment = gv.Comment;
            // set comment for global variable
            gv.Comment = "Set the comment for this global variable";</code><code title="Example2" description="" lang="PHP">
            // get global variable
            $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespace", "MyGlobalVariable");
             
            // get comment for current global variable
            $comment = $gv-&gt;Comment;
            // set comment for global variable
            $gv-&gt;Comment = "Set the comment for this global variable";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables">
            <summary>Represents a collection of local variables that can be accessed by name.</summary>
            <remarks>This interface can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Variables">IZennoPosterProjectModel.Variables Property</seealso>
            <example>
            The following example uses property <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Variables">Variables</see> of "project" for getting and setting value of local variable.
            <code title="Example" description="" lang="C#">
            // get local variable
            ILocalVariable lv = project.Variables["LocalVariable"];
             
            // get value
            string oldValue = lv.Value;
             
            // set value
            lv.Value = "NewValue";
             
            // get a new value
            string newValue = lv.Value;
             
            // return old and new value
            return String.Format("Old value: {0}; New value: {1}", oldValue, newValue);</code><code title="Example2" description="" lang="PHP">
            // get local variable
            $lv = $project-&gt;Variables-&gt;get_Item("LocalVariable");
             
            // get value
            $oldValue = $lv-&gt;Value;
             
            // set value
            $lv-&gt;Value = "NewValue";
             
            // get a new value
            $newValue = $lv-&gt;Value;
             
            // return old and new value
            return String::Format("Old value: {0}; New value: {1}", $oldValue, $newValue);</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables.Item(System.String)">
            <summary>
            	<para>Get the local variable by the specified name.</para>
            </summary>
            <param name="variableName">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	<para>
            The name of local variable.</para>
            </param>
            <remarks>This property uses only for getting necessary local variable.</remarks>
            <value>
            	
            Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable</see>
            	
            	<para>
            The object of <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable</see> describing local variable.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable Interface</seealso>
            <exception caption="KeyNotFoundException" cref="T:System.Collections.Generic.KeyNotFoundException">The exception that is thrown when the name specified for accessing a local variable in a collection does not match any name in the collection.</exception>
            <example>
            The following example uses property "<see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables.Item(System.String)">Item</see>" (operator []) to access a local variable with name <font color="maroon">"LocalVariable"</font>.
            <code title="Example" description="" lang="C#">
            ILocalVariable lv = project.Variables["LocalVariable"];</code><code title="Example2" description="" lang="PHP">
            $lv = $project-&gt;Variables-&gt;get_Item("LocalVariable");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables.Keys">
            <summary>
            	<para>Get the keys list of variables items.</para>
            </summary>
            <value>
                <para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
                <para>The collection objects of <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see> describing keys of variables items.</para>
            </value>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">
            <summary>Represents the data of the local variable.</summary>
            <remarks>This interface can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables">ILocalVariables Interface</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable</see> Interface for getting information about local variable.
            <code title="Example" description="" lang="C#">
            // get local variable
            ILocalVariable lv = project.Variables["VariableName"];
             
            // get comment for current local variable
            string comment = lv.Comment;
            // if value is empty then set comment for local variable
            if (String.IsNullOrWhiteSpace(comment)) lv.Comment = "Set the comment for this local variable";
             
            // get name of local variable
            string name = lv.Name;
            // get group of local variable
            string @group = lv.Group.ToString();
            // get value of local variable
            object value = lv.Value;
             
            // show message about variable
            System.Windows.Forms.MessageBox.Show(String.Format("Local variable: value is {0}; comment {1}", value, comment), 
                    String.Format("Information about variable {0} from group {1}", name, @group));</code><code title="Example2" description="" lang="PHP">
            // get local variable
            $lv = $project-&gt;Variables-&gt;get_Item("VariableName");
             
            // get comment for current local variable
            $comment = $lv-&gt;Comment;
            // if value is empty then set comment for local variable
            if (String::IsNullOrWhiteSpace($comment)) $lv-&gt;Comment = "Set the comment for this local variable";
             
            // get name of local variable
            $name = $lv-&gt;Name;
            // get group of local variable
            $group = $lv-&gt;Group-&gt;ToString();
            // get value of local variable
            $value = $lv-&gt;Value;
             
            // show message about variable
            System\Windows\Forms\MessageBox::Show(String::Format("Local variable: value is {0}; comment {1}", $value, $comment), 
                    String::Format("Information about variable {0} from group {1}", $name, $group));</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.ToString">
            <summary>
            	
            Returns a string that represents the current local variable.
            </summary>
            <returns>
            	
            Type: <see>System.String
                    </see>
            	
            	
            		A string that represents the current local variable.
            	
            </returns>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables">ILocalVariables Interface</seealso>
            <example>
            	
            The following example converts an <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable</see>
            	
            		object using the default <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.ToString">ToString</see>
            	
            method.
            	<code title="Example" description="" lang="C#">
            // get local variable
            ILocalVariable lv = project.Variables["VariableName"];
             
            // convert local variable to string
            string stringLocalVariable = lv.ToString();</code>
            	<code title="Example2" description="" lang="PHP">
            // get local variable
            $lv = $project-&gt;Variables-&gt;get_Item("VariableName");
             
            // convert local variable to string
            $stringLocalVariable = $lv-&gt;ToString();</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.Name">
            <summary>Gets or sets name of local variable.</summary>
            <value>
            	
            Type: <see>System.String
                                                        </see>
            	
            	<para>
            The name of local variable.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables">ILocalVariables Interface</seealso>
            <example>
            The following example demonstrates using <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.Name">Name</see> property.
            <code title="Example" description="" lang="C#">
            // get local variable
            ILocalVariable lv = project.Variables["VariableName"];
             
            // get name of current local variable
            string name = lv.Name;
            // set name of local variable
            lv.Name = "NewName";</code><code title="Example2" description="" lang="PHP">
            // get local variable
            $lv = $project-&gt;Variables-&gt;get_Item("VariableName");
             
            // get name of current local variable
            $name = $lv-&gt;Name;
            // set name of local variable
            $lv-&gt;Name = "NewName";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.Value">
            <summary>Gets or sets value of local variable.</summary>
            <value>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            	
            	<para>
            The value of local variable.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables">ILocalVariables Interface</seealso>
            <example>
            The following example demonstrates using <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.Value">Value</see> property.
            <code title="Example" description="" lang="CS">
            // get local variable
            ILocalVariable lv = project.Variables["VariableName"];
             
            // get value of local variable
            string value = lv.Value;
             
            // set value of local variable
            lv.Value = "0";</code><code title="Example2" description="" lang="PHP">
            // get local variable
            $lv = $project-&gt;Variables-&gt;get_Item("VariableName");
             
            // get value of local variable
            $value = $lv-&gt;Value;
             
            // set value of local variable
            $lv-&gt;Value = "0";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.Comment">
            <summary>Gets or sets comment for local variable.</summary>
            <value>
            	
            Type: <see>System.String
                                                        </see>
            	
            	<para>
            The comment of local variable.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables">ILocalVariables Interface</seealso>
            <example>
            The following example demonstrates using <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.Comment">Comment</see> property.
            <code title="Example" description="" lang="C#">
            // get local variable
            ILocalVariable lv = project.Variables["VariableName"];
             
            // get comment for current local variable
            string comment = lv.Comment;
            // set comment for local variable
            lv.Comment = "Set the comment for this local variable";</code><code title="Example2" description="" lang="PHP">
            // get local variable
            $lv = $project-&gt;Variables-&gt;get_Item("VariableName");
             
            // get comment for current local variable
            $comment = $lv-&gt;Comment;
            // set comment for local variable
            $lv-&gt;Comment = "Set the comment for this local variable";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.Group">
            <summary>Gets or sets group of local variable.</summary>
            <remarks>This field used for determining type of variable. It can be auto-generated variable (this variables generated by ZennoPoster) or user-created variable.</remarks>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Enums.VariableGroupTypeV4">ZennoLab.InterfacesLibrary.ProjectModel.Enums.VariableGroupTypeV4</see></para>
            	<para>
            The group of local variable.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Enums.VariableGroupTypeV4">VariableGroupTypeV4 Enumeration</seealso>
            <example>
            The following example demonstrates using <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.Group">Group</see> property.
            <code title="Example" description="" lang="C#">
            // get local variable
            ILocalVariable lv = project.Variables["VariableName"];
             
            // if variable is auto-generated
            if (lv.Group == VariableGroupTypeV4.AutoGenerated)
            {
                // show follow message
                System.Windows.Forms.MessageBox.Show(String.Format("Local variable {0} is auto-generated", lv.Name), 
                "Local variable type information");
            }
             
            // if variable is user-created
            if (lv.Group == VariableGroupTypeV4.UserDefined) 
            {
                // show follow message
                System.Windows.Forms.MessageBox.Show(String.Format("Local variable {0} is user-created", lv.Name), 
                "Local variable type information");
            }</code><code title="Example2" description="" lang="PHP">
            // get local variable
            $lv = $project-&gt;Variables-&gt;get_Item("VariableName");
             
            // if variable is auto-generated
            if ($lv-&gt;Group == VariableGroupTypeV4::AutoGenerated)
            {
                // show follow message
                System\Windows\Forms\MessageBox::Show(String::Format("Local variable {0} is auto-generated", $lv-&gt;Name), 
                "Local variable type information");
            }
             
            // if variable is user-created
            if ($lv-&gt;Group == VariableGroupTypeV4::UserDefined) 
            {
                // show follow message
                System\Windows\Forms\MessageBox::Show(String::Format("Local variable {0} is user-created", $lv-&gt;Name), 
                "Local variable type information");
            }</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">
            <summary>Represents the data of the list. Provides method for binding data.</summary>
            <remarks>This interface can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable Interface</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">IZennoList</see> Interface for getting information about list.
            <code title="Example" description="" lang="C#">
            // get the list
            IZennoList list = project.Lists["List 1"];
            // get count
            int count = list.Count;
            var sb = new StringBuilder();
            // items to string
            foreach (string str in list) sb.AppendLine(str);
            // return the string
            return sb.ToString();</code><code title="Example2" description="" lang="PHP">
            // get the list
            $list = $project-&gt;Lists["List 1"];
            // get count
            $count = $list-&gt;Count;
            $sb = new System\Text::StringBuilder();
            // items to string
            foreach ($list as $str) $sb-&gt;AppendLine($str);
            // return the string
            return $sb-&gt;ToString();</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList.Bind(System.String)">
            <summary>Binds the specified file to current list.</summary>
            <param name="filename">
            	<para>
            		
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            	</para>
            	<para>
            		
            The file name for bind data.
            	</para>
            </param>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList.Bind(System.String)">Bind</see> method.
            <code title="Example" description="" lang="C#">
            // get the list
            var list = project.Lists["List 1"];
            // bind
            list.Bind("C:\\mylist.txt");</code><code title="Example2" description="" lang="PHP">
            // get the list
            $list = $project-&gt;Lists["List 1"];
            // bind
            $list-&gt;Bind("C:\\mylist.txt");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList.AddRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Adds the elements from IEnumerable&lt;String&gt; collection of the specified collection to the end of IZennoList.</summary>
            <overloads>Adds the elements of the specified collection to the end of <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">IZennoList</see>.</overloads>
            <param name="range">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx">System.Collection.Generic.IEnumerable</see>&lt;String&gt;</para>
            	<para>The collection whose elements should be added to the end of the <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">IZennoList</see>. The collection itself cannot be <strong>null</strong>, but it can
            contain elements that are <strong>null</strong>.</para>
            </param>
            <remarks>The order of the elements in the collection is preserved in the <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">IZennoList</see>.</remarks>
            <example>
            The following code example demonstrates the <see cref="O:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList.AddRange">AddRange</see> method.
            <code title="Example" description="" lang="C#">
            // create an array of string for adding
            string[] items = new string[3] { "one", "two", "three" };
            // add range of the string to the project list
            project.Lists["List 1"].AddRange(items);
            // create a list of string
            List&lt;string&gt; list = new List&lt;string&gt; { "four", "five", "six" };
            // add list of string to the project list
            project.Lists["List 1"].AddRange(list);</code><code title="Example2" description="" lang="PHP">
            // create an array of string for adding
            $items = array( "one", "two", "three" );
            // add range of the string to the project list
            $project-&gt;Lists["List 1"]-&gt;AddRange($items);
            // create a list of string
            $list = new  System\Collections\Generic\List&lt;string&gt; { "four", "five", "six" };
            // add list of string to the project list
            $project-&gt;Lists["List 1"]-&gt;AddRange($list);</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList.AddRange(ZennoLab.InterfacesLibrary.ProjectModel.IZennoList)">
            <overloads>Adds the elements of the specified collection to the end of <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">IZennoList</see>.</overloads>
            <summary>Adds the elements from <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">IZennoList</see> collection of the specified collection to the end of IZennoList.</summary>
            <param name="list">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">ZennoLab.IntefacesLibrary.ProjectModel.IZennoList</see></para>
            	<para>The collection whose elements should be added to the end of the <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">IZennoList</see>. The collection itself cannot be <strong>null</strong>, but it can
            contain elements that are <strong>null</strong>.</para>
            </param>
            <remarks>The order of the elements in the collection is preserved in the <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">IZennoList</see>.</remarks>
            <example>
            The following code example demonstrates the <see cref="O:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList.AddRange">AddRange</see> method.
            <code title="Example" description="" lang="C#">
            // add all items from project with name "List 2"
            // to the project list with name "List 1"
            project.Lists["List 1"].AddRange(project.Lists["List 2"]);</code><code title="Example2" description="" lang="PHP">
            // add all items from project with name "List 2"
            // to the project list with name "List 1"
            $project-&gt;Lists["List 1"]-&gt;AddRange($project-&gt;Lists["List 2"]);</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel">
            <summary>Represents a model of current project. Performs access to global variables, local  variables, tables, profile, lists. Contains methods for sending
            messages of warnings and errors to program's log.</summary>
            <remarks>The object of the <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel">IZennoPosterModel</see> interface get access to major data of ZennoPoster's project.</remarks>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables">IGlobalVariables Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILists">ILists Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables">ILocalVariables Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile">IProfile Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables">ITables Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Enums.ProfileSex">ProfileSex Enumeration</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Enums.VariableGroupTypeV4">VariableGroupTypeV4 Enumeration</seealso>
            <example>
            The following example demonstrates using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel">IZennoPosterModel</see> interface. In this example local variable project is object of
            <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel">IZennoPosterModel</see> interface. Variable "project" has access to data of current project.
            <code title="Example" description="" lang="C#">
            // get global variable by name "MyGlobalVariable" from namespace "MyNamespace"
            IGlobalVariable gv = project.GlobalVariables["MyNamespace", "MyGlobalVariable"];
             
            // get local varible by name "MyLocalVariable" 
            ILocalVariable lv = project.Variables["MyLocalVariable"];
             
            // get list by name "MyList"
            ILists list = project.Lists["MyList"];
             
            // get table by name "MyTable"
            ITables table = project.Tables["MyTable"];
             
            // set new login to profile
            project.Profile.Login = "NewLogin1234";
             
            // get nick from profile
            string nick = project.Profile.NickName;</code><code title="Example2" description="" lang="PHP">
            // get global variable by name "MyGlobalVariable" from namespace "MyNamespace"
            $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespace", "MyGlobalVariable");
             
            // get local varible by name "MyLocalVariable" 
            $lv = $project-&gt;Variables-&gt;get_Item("MyLocalVariable");
             
            // get list by name "MyList"
            $list = $project-&gt;Lists-&gt;get_Item("MyList");
             
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // set new login to profile
            $project-&gt;Profile-&gt;Login = "NewLogin1234";
             
            // get nick from profile
            $nick = $project-&gt;Profile-&gt;NickName;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendWarningToLog(System.String,System.Boolean)">
            <summary>Send a warning message to the log of ZennoPoster.</summary>
            <param name="message">
            	
            Type: <see>System.String
                                                        </see>
            	
            	<para>
            A warning message for send.</para>
            </param>
            <param name="showInPoster">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx :">System.Boolean </see>
            	
            	<para>
            Set true, if needs show this message in ZennoPoster.</para>
            </param>
            <remarks>The parameter "way" hasn't restrictions, it should use for specify the location where warning was detected. This parameter can be empty.</remarks>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendErrorToLog(System.String,System.String,System.Boolean)">SendErrorToLog Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendInfoToLog(System.String,System.String,System.Boolean)">SendInfoToLog Method</seealso>
            <example>
            	
            		<font size="2" face="Verdana">The following example demonstrates using <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendWarningToLog(System.String,System.Boolean)">SendWarningToLog</see> method.</font>
            	
            	<code title="Example" description="" lang="C#">
            // get gender form profile
            ProfileSex gender = project.Profile.Sex;
             
            // send warning
            if (gender == ProfileSex.Female) project.SendWarningToLog("Oh, hell, it is a woman", "OwnCode C#");</code>
            	<code title="Example2" description="" lang="PHP">
            // get gender form profile
            $gender = $project-&gt;Profile-&gt;Sex;
             
            // send warning
            if ($gender == ProfileSex::Female) $project-&gt;SendWarningToLog("Oh, hell, it is a woman", "OwnCode PHP");</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendErrorToLog(System.String,System.Boolean)">
            <summary>Send an error message to the log of ZennoPoster.</summary>
            <param name="message">
            	
            Type: <see>System.String
                                                        </see>
            	
            	<para>
            An error message for send.</para>
            </param>
            <param name="showInPoster">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx :">System.Boolean </see>
            	
            	<para>
            Set true, if needs show this message in ZennoPoster.</para>
            </param>
            <remarks>The parameter "way" hasn't restrictions, it should use for specify the location where error was detected. This parameter can be empty.</remarks>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendInfoToLog(System.String,System.String,System.Boolean)">SendInfoToLog Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendWarningToLog(System.String,System.String,System.Boolean)">SendWarningToLog Method</seealso>
            <example>
            	
            		<font size="2" face="Verdana">The following example demonstrates using <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendErrorToLog(System.String,System.Boolean)">SendErrorToLog</see> method.</font>
            	
            	<code title="Example" description="" lang="C#">
            try
            {
                // get global variable
                IGlobalVariable gv = project.GlobalVariables["MyNamespace", "MyGlobalVariable"];
            }
            catch (Exception e)
            {
                // send error to log
                project.SendErrorToLog(e.Message);
            }</code>
            	<code title="Example2" description="" lang="PHP">
            try
            {
                // get global variable
                $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespace", "MyGlobalVariable");
            }
            catch (Exception $e)
            {
                // send error to log
                $project-&gt;SendErrorToLog($e-&gt;Message);
            }</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendInfoToLog(System.String,System.Boolean)">
            <summary>Send an information to the log of ZennoPoster.</summary>
            <param name="message">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	<para>
            An information for send.</para>
            </param>
            <param name="showInPoster">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx :">System.Boolean </see>
            	
            	<para>
            Set true, if needs show this message in ZennoPoster.</para>
            </param>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendErrorToLog(System.String,System.String,System.Boolean)">SendErrorToLog Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendWarningToLog(System.String,System.String,System.Boolean)">SendWarningToLog Method</seealso>
            <example>
            	
            		<font size="2" face="Verdana">The following example demonstrates using <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendInfoToLog(System.String,System.Boolean)">SendInfoToLog</see> method.</font>
            	
            	<code title="Example" description="" lang="C#">
            // get gender form profile
            ProfileSex gender = project.Profile.Sex;
             
            // send warning
            if (gender == ProfileSex.Female) project.SendInfoToLog("It is a woman");</code>
            	<code title="Example2" description="" lang="PHP">
            // get gender form profile
            $gender = $project-&gt;Profile-&gt;Sex;
             
            // send warning
            if ($gender == ProfileSex::Female) $project-&gt;SendInfoToLog("It is a woman");</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendWarningToLog(System.String,System.String,System.Boolean)">
            <summary>Send a warning message to the log of ZennoPoster.</summary>
            <param name="message">
            	
            Type: <see>System.String
                                                        </see>
            	
            	<para>
            A warning message for send.</para>
            </param>
            <param name="way">
            	
            Type: <see>System.String
                                                        </see>
            	
            	<para>
            A warning "way" for send. The parameter "way" can be line in code, action or module.</para>
            </param>
            <param name="showInPoster">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx :">System.Boolean </see>
            	
            	<para>
            Set true, if needs show this message in ZennoPoster.</para>
            </param>
            <remarks>The parameter "way" hasn't restrictions, it should use for specify the location where warning was detected. This parameter can be empty.</remarks>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendErrorToLog(System.String,System.String,System.Boolean)">SendErrorToLog Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendInfoToLog(System.String,System.String,System.Boolean)">SendInfoToLog Method</seealso>
            <example>
            	
            		<font size="2" face="Verdana">The following example demonstrates using <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendWarningToLog(System.String,System.Boolean)">SendWarningToLog</see> method.</font>
            	
            	<code title="Example" description="" lang="C#">
            // get gender form profile
            ProfileSex gender = project.Profile.Sex;
             
            // send warning
            if (gender == ProfileSex.Female) project.SendWarningToLog("Oh, hell, it is a woman", "OwnCode C#");</code>
            	<code title="Example2" description="" lang="PHP">
            // get gender form profile
            $gender = $project-&gt;Profile-&gt;Sex;
             
            // send warning
            if ($gender == ProfileSex::Female) $project-&gt;SendWarningToLog("Oh, hell, it is a woman", "OwnCode PHP");</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendErrorToLog(System.String,System.String,System.Boolean)">
            <summary>Send an error message to the log of ZennoPoster.</summary>
            <param name="message">
            	
            Type: <see>System.String
                                                        </see>
            	
            	<para>
            An error message for send.</para>
            </param>
            <param name="way">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	<para>
            An error "way" for send. The parameter "way" can be line in code, action ID or module.</para>
            </param>
            <param name="showInPoster">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx :">System.Boolean </see>
            	
            	<para>
            Set true, if needs show this message in ZennoPoster.</para>
            </param>
            <remarks>The parameter "way" hasn't restrictions, it should use for specify the location where error was detected. This parameter can be empty.</remarks>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendInfoToLog(System.String,System.String,System.Boolean)">SendInfoToLog Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendWarningToLog(System.String,System.String,System.Boolean)">SendWarningToLog Method</seealso>
            <example>
            	
            		<font size="2" face="Verdana">The following example demonstrates using <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendErrorToLog(System.String,System.Boolean)">SendErrorToLog</see> method.</font>
            	
            	<code title="Example" description="" lang="C#">
            try
            {
                // get global variable
                IGlobalVariable gv = project.GlobalVariables["MyNamespace", "MyGlobalVariable"];
            }
            catch (Exception e)
            {
                // send error to log
                project.SendErrorToLog(e.Message, "first action OwnCode C#");
            }</code>
            	<code title="Example2" description="" lang="PHP">
            try
            {
                // get global variable
                $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespace", "MyGlobalVariable");
            }
            catch (Exception $e)
            {
                // send error to log
                $project-&gt;SendErrorToLog($e-&gt;Message, "first action OwnCode PHP");
            }</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendInfoToLog(System.String,System.String,System.Boolean)">
            <summary>Send an information to the log of ZennoPoster.</summary>
            <param name="message">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	<para>
            An information for send.</para>
            </param>
            <param name="showInPoster">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx :">System.Boolean </see>
            	
            	<para>
            Set true, if needs show this message in ZennoPoster.</para>
            </param>
            <param name="way">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	<para>
            An information "way" for send. The parameter "way" can be line in code, action ID or module.</para>
            </param>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendErrorToLog(System.String,System.String,System.Boolean)">SendErrorToLog Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendWarningToLog(System.String,System.String,System.Boolean)">SendWarningToLog Method</seealso>
            <example>
            	
            		<font size="2" face="Verdana">The following example demonstrates using <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendInfoToLog(System.String,System.Boolean)">SendInfoToLog</see> method.</font>
            	
            	<code title="Example" description="" lang="C#">
            // get gender form profile
            ProfileSex gender = project.Profile.Sex;
             
            // send warning
            if (gender == ProfileSex.Female) project.SendInfoToLog("It is a woman", "OwnCode C#");</code>
            	<code title="Example2" description="" lang="PHP">
            // get gender form profile
            $gender = $project-&gt;Profile-&gt;Sex;
             
            // send warning
            if ($gender == ProfileSex::Female) $project-&gt;SendInfoToLog("It is a woman", "OwnCode PHP");</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.GetLastError">
            <summary>Get a last error after project failed.</summary>
            <returns>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.LastError">ZennoLab.InterfacesLibrary.ProjectModel.LastError</see></para>
            	<para>An information of last error.</para>
            </returns>
            <example>
            	
            The following example demonstrates using <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.GetLastError">GetLastError</see> method.
            	<code title="Example" description="" lang="C#">
            var error = project.GetLastError();
            var tmp = "";
            if(error != null)
                tmp = string.Format("ActionComment: {0}.\r\nActionGroupId: {1}.\r\nActionId: {2}", error.ActionComment, error.ActionGroupId, error.ActionId);
             
            return tmp;</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.ExecuteProject(System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Boolean,System.Boolean)">
            <summary>Execute ZennoPoster project.</summary>
            <param name="pathToProject">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	<para>
            The path to project file.</para>
            </param>
            <param name="varibleMapping">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.collections.ienumerable.aspx :">System.IEnumerable </see>
            	
            	<para>
            Collection of pair variables name in current project and called project.</para>
            </param>
            <param name="mapOnBadExist">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx :">System.Boolean </see>
            	
            	<para>
            Set true, if needs map variables to current project even if execution of called project will be failed.</para>
            </param>
            <param name="passProjectContext">
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx :">System.Boolean </see>
            	
            	<para>
            Set true, if needs map context of current project to called project and back.</para>
            </param>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendErrorToLog(System.String,System.String,System.Boolean)">SendErrorToLog Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.SendWarningToLog(System.String,System.String,System.Boolean)">SendWarningToLog Method</seealso>
            <example>
            	
            		<font size="2" face="Verdana">The following example demonstrates using <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.ExecuteProject(System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Boolean,System.Boolean)">ExecuteProject</see> method.</font>
            	
            	<code title="Example" description="" lang="C#">
            // set value for variable a1, make sure that source project contains variable "a1"
            project.Variables["a1"].Value = "example";
            
            var mapVars = new List&lt;Tuple&lt;string, string&gt;&gt;();
            
            // make sure that called project contains variable "b1"
            mapVars.Add(new Tuple&lt;string, string&gt;("a1", "b1"));
            
            return project.ExecuteProject("example.xmlz", mapVars, true, true);</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Directory">
            <summary>Gets the directory of the project file.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.string.aspx">System.String</see></para>
            	<para>The directory of the project file.</para>
            </value>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Directory">Directory</see> property of "project".
            <code title="Example" description="" lang="C#">
            // get directory of the project
            string projectDirectory = project.Directory;</code><code title="Example2" description="" lang="PHP">
            // get directory of the project
            $projectDirectory = $project-&gt;Directory;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Path">
            <summary>Gets the directory of the project file with terminating \</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.string.aspx">System.String</see></para>
            	<para>The directory of the project file.</para>
            </value>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Path">Path</see> property of "project".
            <code title="Example" description="" lang="C#">
            // get directory of the project
            string projectDirectory = project.Path;</code><code title="Example2" description="" lang="PHP">
            // get directory of the project
            $projectDirectory = $project-&gt;Path;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Variables">
            <summary>Get a collection of local variables that can be accessed name.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables">ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables</see></para>
            	<para>A collection of local variables.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables">ILocalVariables Interface</seealso>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Variables">Variables</see> property of "project" for getting and setting value of local variable.
            <code title="Example" description="" lang="CS">
            // get local variable
            ILocalVariable lv = project.Variables["MyLocalVariable"];
             
            // set value
            if (lv.Value == "5") lv.Value = "0";</code><code title="Example2" description="" lang="PHP">
            // get local variable
            $lv = $project-&gt;Variables-&gt;get_Item("MyLocalVariable");
             
            // set value
            if ($lv-&gt;Value == "5") $lv-&gt;Value = "0";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.GlobalVariables">
            <summary>Get a collection of global variables that can be accessed by namespace and name.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables">ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables</see></para>
            	<para>A collection of global variables.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IGlobalVariable">IGlobalVariable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IGlobalVariables">IGlobalVariables Interface</seealso>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.GlobalVariables">GlobalVariables</see> property of "project" for getting and setting value of global variable, also create a
            new global variable.
            <code title="Example" description="" lang="C#">
            // get global variable by namespace and name
            // variable "gv" object of interface IGlobalVariable
            IGlobalVariable gv = project.GlobalVariables["MyNamespase", "VariableName"];
             
            // change value of global variable
            gv.Value = "ChangedValue";
             
            // create a new global variable and set value
            project.GlobalVariables.SetVariable("MyNamespase", "NewVariableName", "NewValue");</code><code title="Example2" description="" lang="PHP">
            // get global variable by namespace and name
            // variable "gv" object of interface IGlobalVariable
            $gv = $project-&gt;GlobalVariables-&gt;get_Item("MyNamespase", "VariableName");
             
            // change value of global variable
            $gv-&gt;Value = "ChangedValue";
             
            // create a new global variable and set value
            $project-&gt;GlobalVariables-&gt;SetVariable("MyNamespase", "NewVariableName", "NewValue");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Lists">
            <summary>Get a collection of lists that can be accessed name.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILists">ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILists</see></para>
            	<para>A collection of lists.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILists">ILists Interface</seealso>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Lists">Lists</see> property of "project" for getting list by name.
            <code title="Example" description="" lang="C#">
            // get list by name "MyList"
            var list = project.Lists["MyList"];
             
            // add a new item to list
            list.Add("new_list_item");
             
            // get list by name "AnotherList" and get count of item
            int count = project.Lists["AnotherList"].Count;</code><code title="Example2" description="" lang="PHP">
            // get list by name "MyList"
            $list = $project-&gt;Lists-&gt;get_Item("MyList");
             
            // add a new item to list
            $list-&gt;Add("new_list_item");
             
            // get list by name "AnotherList" and get count of item
            $count = $project-&gt;Lists-&gt;get_Item("AnotherList")-&gt;Count;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Name">
            <summary>Gets the name of the project.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.string.aspx">System.String</see></para>
            	<para>The name of the project.</para>
            </value>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Name">Name</see> property of "project".
            <code title="Example" description="" lang="C#">
            // get the name of the current project
            string projectName = project.Name;</code><code title="Example2" description="" lang="PHP">
            // get the name of the current project
            $projectName = $project-&gt;Name;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Tables">
            <summary>Get a collection of tables that can be accessed name.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables">ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables</see></para>
            	<para>A collection of tables.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables">ITables Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable Interface</seealso>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Tables">Tables</see> property of "project" for getting table by name.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // add a new row
            table.AddRow("simple text");
             
            // get table by name "AnotherTable" and get row count
            int count = project.Tables["AnoterTable"].RowCount;</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // add a new row
            $table-&gt;AddRow("simple text");
             
            // get table by name "AnotherTable" and get row count
            $count = $project-&gt;Tables-&gt;get_Item("AnoterTable")-&gt;RowCount;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Profile">
            <summary>Get a profile of current project.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile">ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile</see></para>
            	<para>A profile of current project.</para>
            </value>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IProfile">IProfile Interface</seealso>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Profile">Profile</see> property of "project".
            <code title="Example" description="" lang="C#">
            // set a new email to profile
            project.Profile.Email = "myemail@someemail.com";
             
            // get SecretQuestionAnswer1 from profile
            string SecretQuestionAnswer1 = project.Profile.SecretQuestionAnswer1;</code><code title="Example2" description="" lang="PHP">
            // set a new email to profile
            $project-&gt;Profile-&gt;Email = "myemail@someemail.com";
             
            // get SecretQuestionAnswer1 from profile
            $SecretQuestionAnswer1 = $project-&gt;Profile-&gt;SecretQuestionAnswer1;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.ProxyRules">
            <summary>Gets the proxy rules for the current project.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.string.aspx">System.String</see></para>
            	<para>The proxy rules for the current project.</para>
            </value>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.ProxyRules">ProxyRules</see> property of "project".
            <code title="Example" description="" lang="C#">
            // get the proxy rules of the current project
            string proxyRules = project.ProxyRules;</code><code title="Example2" description="" lang="PHP">
            // get the proxy rules of the current project
            $proxyRules = $project-&gt;ProxyRules;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Context">
            <summary>Gets a context of the current project.</summary>
            <value>
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.IContext">ZennoLab.InterfacesLibrary.ProjectModel.Collections.IContext</see></para>
            	<para>The pcontext of the current project.</para>
            </value>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Context">Context</see> property of "project".
            <code title="Example" description="" lang="C#">
            // get shared object with name "ObjectName"
            object o = project.Context["ObjectName"];
            // set shared object with name "ObjectName"
            project.Context["ObjectName"] = "example string or any another object";
            </code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.TaskId">
            <summary>Gets the id of the task.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/ru-ru/library/system.guid.aspx">System.Guid</see></para>
            	<para>The id of the task.</para>
            </value>
            <example>
            The following example uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.Name">TaskId</see> property of "project".
            <code title="Example" description="" lang="C#">
            // get the id of the current task
            String id = project.TaskId;</code><code title="Example2" description="" lang="PHP">
            // get the id of the current task
            $id = $project-&gt;TaskId;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModelExt">
            <summary>
            
            </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModelExt.SetLastError(ZennoLab.InterfacesLibrary.ProjectModel.LastError)">
            <summary>Set a last error after project failed.</summary>
            <param name="error">
            	<para>Type: <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.LastError">ZennoLab.InterfacesLibrary.ProjectModel.LastError</see></para>
            	<para>An information of last error.</para>
            </param>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModelExt.IsInterrupted">
            <summary>Get or set a info about thread interrupting.</summary>
            <returns>
            	<para>Type: <see>System.String</see></para>
            	<para>An information about thread interrupting.</para>
            </returns>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModelExt.Context">
            <summary>
            
            </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">
            <summary>Represents the data of the table. Provides methods for editing.</summary>
            <remarks>This interface can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables">ITables Interface</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> Interface for getting information about table.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // add a new row
            table.AddRow("new row");
             
            // get row count
            int rowCount = table.RowCount;
             
            // if row count &gt; 0
            if (rowCount &gt; 0) 
            {
                // get row by index "0"
                var row = table.GetRow(0);
                
                // join items via "|"
                string result = String.Join("|", row);
                
                // and return this value
                return result;
            }</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // add a new row
            $table-&gt;AddRow("new row");
             
            // get row count
            $rowCount = $table-&gt;RowCount;
             
            // if row count &gt; 0
            if ($rowCount &gt; 0) 
            {
                // get row by index "0"
                $row = $table-&gt;GetRow(0);
                
                // join items via "|"
                $result = String::Join("|", $row);
                
                // and return this value
                return $result;
            }</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.GetCell(System.String,System.Int32)">
            <summary>
            	
            Gets a value from a cell by column name.
            </summary>
            <overloads>
            	
            		
            Gets a value from a cell.
            	
            </overloads>
            <param name="column">
            	<para>
            		
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            	</para>
            	<para>
            		
            The name of column.
            	</para>
            </param>
            <param name="row">
            	<para>
            		
            Type :
            		<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	</para>
            	<para>
            		
            			The cell's row, zero-based index.
            		
            	</para>
            </param>
            <returns>
            	<para>
            		
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            	</para>
            	<para>
            		
            Value of the requested cell.
            	</para>
            </returns>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.SetCell(System.String,System.Int32,System.String)">SetCell Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.GetRow(System.Int32)">GetRow Method</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> Interface for getting cell.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // get cell value from column "A" in the zero line
            string cell = table.GetCell("A", 0);</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // get cell value from column "A" in the zero line
            $cell = $table-&gt;GetCell("A", 0);</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.GetRow(System.Int32)">
            <summary>
            	
            		<font size="2">
            			<font color="black">Returns the value of the row at the specified index from <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see>
            object as <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0.aspx">System.Collections.Generic.IEnumerable</see>&lt;<see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">String</see>&gt; object.</font>
            		</font>
            	
            </summary>
            <param name="row">
            	
            Type: 
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx:">System.Int32 </see>
            	
            	<para>
            The zero-based index of the row.</para>
            </param>
            <returns>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/9eekhta0.aspx">System.Collections.Generic.IEnumerable </see>&lt;<see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">String</see>&gt;</para>
            	<para>
            		A collection that contains the strings from the specified row.
            	</para>
            </returns>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow(System.String)">AddRow Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.DeleteRow(System.Int32)">DeleteRow Method</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowCount">RowCount Property</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowSeparator">RowSeparator Property</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> Interface for getting row.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // get row
            string row = String.Join(":", table.GetRow(0));
             
            // show message
            System.Windows.Forms.MessageBox.Show(row, "Row from table");</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // get row
            $row = String::Join(":", $table-&gt;GetRow(0));
             
            // show message
            System\Windows\Forms\MessageBox::Show($row, "Row from table");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.SetCell(System.String,System.Int32,System.String)">
            <summary>Sets a value into a cell by name.</summary>
            <overloads>Sets a value into a cell.</overloads>
            <param name="column">
            	<para>
            		
            Type: http://msdn.microsoft.com/en-us/library/system.string.aspx%
            	</para>
            	<para>
            		
            The name of column.
            	</para>
            </param>
            <param name="row">
            	<para>
            		
            Type:
            		<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	</para>
            	<para>
            		
            			The cell's row, zero-based index.
            		
            	</para>
            </param>
            <param name="value">
            	<para>Type: <font size="2" face="Segoe UI">http://msdn.microsoft.com/en-us/library/system.string.aspx%</font></para>
            	<para>The value for the cell being set.</para>
            </param>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow(System.String)">AddRow Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.GetCell(System.String,System.Int32)">GetCell Method</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> Interface for setting cell.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // set value into cell
            table.SetCell("A", 0, "value");</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // set value into cell
            $table-&gt;SetCell("A", 0, "value");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.GetCell(System.Int32,System.Int32)">
            <summary>
            	
            		
            Gets a value from a cell by column index.
            	
            </summary>
            <overloads>
            	
            		
            Gets a value from a cell.
            	
            </overloads>
            <param name="row">
            	<para>
            		
            Type :
            		<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	</para>
            	<para>
            		
            			The cell's row, zero-based index.
            		
            	</para>
            </param>
            <param name="column">
            	<para>
            		
            			
            Type :
            			<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            		
            	</para>
            	<para>
            		
            The index of column.
            	</para>
            </param>
            <returns>
            	<para>
            		
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            	</para>
            	<para>
            		
            Value of the requested cell.
            	</para>
            </returns>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.GetRow(System.Int32)">GetRow Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.SetCell">SetCell Method</seealso>
            <exception caption="IndexOutOfRangeException" cref="T:System.IndexOutOfRangeException">The exception that is thrown when an attempt is made to access an element of an array with an index that is outside the bounds of the array.</exception>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> Interface for getting cell.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // get cell value from column "0" in the zero line
            string cell = table.GetCell(0, 0);</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // get cell value from column "0" in the zero line
            $cell = $table-&gt;GetCell(0, 0);</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.SetCell(System.Int32,System.Int32,System.String)">
            <summary>Sets a value into a cell by index.</summary>
            <overloads>Sets a value into a cell.</overloads>
            <param name="row">
            	<para>
            		
            Type:
            		<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	</para>
            	<para>
            		
            			The cell's row, zero-based index.
            		
            	</para>
            </param>
            <param name="column">
            	<para>
            		
            Type: http://msdn.microsoft.com/en-us/library/system.string.aspx%
            	</para>
            	<para>
            		
            The index of column.
            	</para>
            </param>
            <param name="value">
            	<para>Type: <font size="2" face="Segoe UI">http://msdn.microsoft.com/en-us/library/system.string.aspx%</font></para>
            	<para>The value for the cell being set.</para>
            </param>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow">AddRow Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.GetCell">GetCell Method</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> Interface for setting cell.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // set value into cell
            table.SetCell(0, 0, "value");</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // set value into cell
            $table-&gt;SetCell(0, 0, "value");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow(System.String)">
            <summary>
            	
            Adds a row to the end of the object of <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> interface
            	.
            </summary>
            <overloads>
            	
            Adds a row to the end of the object of <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> interface
            	.
            </overloads>
            <param name="row">
            	<para>
            		
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx:">System.String </see>
            	</para>
            	<para>
            		
            			A string of items created through a specified separator. If this string has a special format, for example file of Excel,
            the values ​should be separated by semicolons.
            		
            	</para>
            </param>
            <remarks>If rows separator wasn't set then will be using separator by default.</remarks>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables">ITables Interface</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.DeleteRow(System.Int32)">DeleteRow Method</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColSeparator">ColSeparator Property</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> Interface for adding row. Before call of <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow(System.String)">AddRow</see> method, set rows separator via
            <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowSeparator">RowSeparator</see> property.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // set row separator
            table.ColSeparator = ":";
             
            // add row 
            table.AddRow("one:two:three:four");</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // set row separator
            $table-&gt;ColSeparator = ":";
             
            // add row 
            $table-&gt;AddRow("one:two:three:four");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            	
            Adds a row from a list of values to the end of the object of <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> interface
            	.
            </summary>
            <overloads>
            	
            Adds a row to the end of the object of <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> interface
            	.
            </overloads>
            <param name="values">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.collections.ienumerable.aspx">IEnumerable&lt;string&gt;</see></para>
            	<para>The values of the row.</para>
            </param>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow">AddRow Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.DeleteRow">DeleteRow Method</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable Interface</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> Interface for adding row. Before call of <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow(System.String)">AddRow</see> method.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // add row 
            table.AddRow(new [] { "one", "two", "three", "four" });</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // add row 
            $table-&gt;AddRow(array("one", "two", "three", "four"));</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.DeleteRow(System.Int32)">
            <summary>Removes the row at the specified index of the <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> object.</summary>
            <overloads>
            	
            Removes the row from <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> object
            	.
            </overloads>
            <param name="rowNumber">
            	
            Type: 
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	<para>
            The zero-based index of the row to remove.</para>
            </param>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables">ITables Interface</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow(System.String)">AddRow Method</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> Interface for removing row.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // remove row 
            table.DeleteRow(0);
             
            // if any row exist then remove row by index "0"
            if (project.Tables["MyTable"].RowCount &gt; 0) project.Tables["MyTable"].DeleteRow(0);</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // remove row 
            $table-&gt;DeleteRow(0);
             
            // if any row exist then remove row by index "0"
            if ($project-&gt;Tables-get_Item("MyTable")-&gt;RowCount &gt; 0) $project-&gt;Tables-&gt;get_Item("MyTable")-&gt;DeleteRow(0);</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.DeleteRow(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Removes the rows at the specified indices from collection of the <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> object.</summary>
            <overloads>
            	
            Removes the row from <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> object
            	.
            </overloads>
            <param name="rows">
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.collections.ienumerable.aspx">IEnumerable&lt;int&gt;</see></para>
            	<para>The <font size="2" face="Segoe UI">specified indices of rows.</font></para>
            </param>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.DeleteRow">DeleteRow Method</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow">AddRow Method</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable Interface</seealso>
            <example>
            The following code using <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see> Interface for removing rows.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // remove rows 
            table.DeleteRow(new [] { 0, 1, 5, 7 });</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // remove rows 
            $table-&gt;DeleteRow(array(0, 1, 5, 7));</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ToString">
            <summary>
            	
            Returns a string that represents the current table.
            </summary>
            <remarks>The <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ToString">ToString</see> method for represents the rows and columns in string uses <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColSeparator">ColSeparator</see> and <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowSeparator">RowSeparator</see> properties.</remarks>
            <returns>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	
            		A string that represents the current table.
            	
            </returns>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ITables">ITables Interface</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowSeparator">RowSeparator Property</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColSeparator">ColSeparator Property</seealso>
            <example>
            	
            The following example converts an <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable">IZennoTable</see>
            	
            		object using the default <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ToString">ToString</see>
            	
            method.
            	<code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // convert table to string  
            string str = project.ToString();</code>
            	<code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // convert table to string  
            $str = $project-&gt;ToString();</code>
            </example>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.Clear">
            <summary>Removes all elements from the table.</summary>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.DeleteRow">DeleteRow Method</seealso>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.Clear">Clear</see> method.
            <code title="Example" description="" lang="C#">
            // clear the table 1
            project.Tables["Table 1"].Clear();</code><code title="Example2" description="" lang="PHP">
            // clear the table 1
            $project-&gt;Tables["Table 1"]-&gt;Clear();</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.Bind(System.String)">
            <summary>Binds the specified file to current table.</summary>
            <param name="filename">
            	<para>
            		
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see>
            	</para>
            	<para>
            		
            The file name for bind data.
            	</para>
            </param>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoList">IZennoList Interface</seealso>
            <example>
            The following code example demonstrates the <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.Bind(System.String)">Bind</see> method.
            <code title="Example" description="" lang="C#">
            // get the table
            IZennoTable table = project.Tables["Table 1"];
            // bind the file
            table.Bind("C:\\mytable.txt");</code><code title="Example2" description="" lang="PHP">
            // get the table
            $table = $project-&gt;Tables["Table 1"];
            // bind the file
            $table-&gt;Bind("C:\\mytable.txt");</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ContainsHeaderLine">
            <summary>Gets or sets a value that indicates the first row is a header line.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>Returns true if first row is header line; otherwise, false;</para>
            </value>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColCount">
            <summary>Gets the number of columns actually contained in the table.</summary>
            <value>
            	
            Type:
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The number of columns actually contained in the table.
            	
            </value>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowCount">RowCount Property</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColSeparator">ColSeparator Property</seealso>
            <example>
            The following code example shows the value of the <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColCount">ColCount</see> property at various points in the life of a table. First gets columns count from empty
            table, after adds a new row and gets columns count.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // get columns count
            int colCount = table.ColCount;
             
            // set rows separator
            table.ColSeparator = ":";
             
            // add row to table
            table.AddRow("one:two:three:four");
             
            // get columns count
            if (table.ColCount != colCount) return "Columns count was changed";
            return "Columns count wasn't changed";</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // get columns count
            $colCount = $table-&gt;ColCount;
             
            // set rows separator
            $table-&gt;ColSeparator = ":";
             
            // add row
            $table-&gt;AddRow("one:two:three:four");
             
            // get columns count
            if ($table-&gt;ColCount != $colCount) return "Columns count was changed";
            return "Columns count wasn't changed";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowCount">
            <summary>Gets the number of rows actually contained in the table.</summary>
            <value>
            	
            Type:
            	<see cref="!:http://msdn.microsoft.com/en-us/library/system.int32.aspx">System.Int32</see>
            	
            	
            		The number of rows actually contained in the table.
            	
            </value>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColCount">ColCount Property</seealso>
            <example>
            The following code example shows the value of the <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowCount">RowCount</see> property at various points in the life of a table.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // get rows count
            int rowsCount = table.RowCount;
             
            // add row
            table.AddRow("one:two:three:four");
             
            // get rows count
            if (table.RowCount != rowsCount) return "Rows count was changed";
            return "Rows count wasn't changed";</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            IZennoTable table = project.Tables-&gt;get_Item("MyTable");
             
            // get rows count
            $rowsCount = $table-&gt;RowCount;
             
            // add row
            $table-&gt;AddRow("one:two:three:four");
             
            // get rows count
            if ($table-&gt;RowCount != $rowsCount) return "Rows count was changed";
            return "Rows count wasn't changed";</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowSeparator">
            <summary>Gets or sets the string that separates the segments of the rows.</summary>
            <remarks>The separator can be regular expression. In this case <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.IsRowSeparatorRegEx">IsRowSeparatorRegEx</see> property should be "true".</remarks>
            <value>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	
            		A string that represents the separator of the rows.
            	
            </value>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow(System.String)">AddRow Method</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColSeparator">ColSeparator Property</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.IsRowSeparatorRegEx">IsRowSeparatorRegEx Property</seealso>
            <example>
            The following code example sets <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowSeparator">RowSeparator</see> property. After a new row adds into the table.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // set rows separator
            table.RowSeparator = ":";
             
            // add row
            table.AddRow("one:two:three:four");
             
            // return table string
            return table.ToString();</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // set rows separator
            $table-&gt;RowSeparator = ":";
             
            // add row
            $table-&gt;AddRow("one:two:three:four");
             
            // return table string
            return $table-&gt;ToString();</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColSeparator">
            <summary>Gets or sets the string that separates the segments of the columns.</summary>
            <remarks>The separator can be regular expression. In this case <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.IsColSeparatorRegEx">IsColSeparatorRegEx</see> property should be "true".</remarks>
            <value>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	
            		A string that represents the separator of the columns.
            	
            </value>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColCount">ColCount Property</seealso>
            <seealso cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.AddRow(System.String)">AddRow Method</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.IsColSeparatorRegEx">IsColSeparatorRegEx Property</seealso>
            <example>
            The following code example sets <see cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColSeparator">ColSeparator</see> property. After a new row adds into the table and returns columns count.
            <code title="Example" description="" lang="C#">
            // get table by name "MyTable"
            IZennoTable table = project.Tables["MyTable"];
             
            // set rows separator
            table.ColSeparator = ":";
             
            // add row
            table.AddRow("one:two:three:four");
             
            // return columns count
            return table.ColCount;</code><code title="Example2" description="" lang="PHP">
            // get table by name "MyTable"
            $table = $project-&gt;Tables-&gt;get_Item("MyTable");
             
            // set rows separator
            $table-&gt;ColSeparator = ":";
             
            // add row
            $table-&gt;AddRow("one:two:three:four");
             
            // return columns count
            return $table-&gt;ColCount;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.CsvSeparator">
            <summary>Gets or sets the string that separates the segments of the columns in .csv file.</summary>
            <remarks>The separator can be "," or ";".</remarks>
            <value>
            	
            Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx :">System.String </see>
            	
            	
            		A string that represents the separator of the columns in .csv file.
            	
            </value>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.IsRowSeparatorRegEx">
            <summary>Gets or sets a value that indicates the rows separator is a regular expression or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>Returns true if rows separator is regular expression; otherwise, false;</para>
            </value>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowSeparator">RowSeparator Property</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.RowCount">RowCount Property</seealso>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>       
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.IsColSeparatorRegEx">
            <summary>Gets or sets a value that indicates the columns separator is a regular expression or not.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.boolean.aspx">System.Boolean</see></para>
            	<para>Returns true if columns separator is regular expression; otherwise, false; </para>
            </value>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColSeparator">ColSeparator Property</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.IZennoTable.ColCount">ColCount Property</seealso>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.Enums.VariableGroupTypeV4">
            <summary>Specifies type of the local variable.</summary>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable">ILocalVariable Interface</seealso>
            <seealso cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Collections.ILocalVariables">ILocalVariables Interface</seealso>
            <seealso cref="P:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable.Group">ILocalVariable.Group Property</seealso>
            <example>
            	
            The following code example uses the <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.Enums.VariableGroupTypeV4">VariableGroupTypeV4</see>
            	
            enumeration for detected type of the local variable.
            	<code title="Example" description="" lang="C#">
            // get group of local variable "MyVariable"
            VariableGroupTypeV4 @group = project.Variables["MyVariable"].Group;
             
            // return result
            if (@group == VariableGroupTypeV4.AutoGenerated) return "The local variable MyVariable is auto generated";
            return "The local variable MyVariable is user-defined";</code>
            	<code title="Example2" description="" lang="PHP">
            // get group of local variable "MyVariable"
            $group = $project-&gt;Variables["MyVariable"]-&gt;Group;
             
            // return result
            if ($group == VariableGroupTypeV4::AutoGenerated) return "The local variable MyVariable is auto generated";
            return "The local variable MyVariable is user-defined";</code>
            </example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectModel.Enums.VariableGroupTypeV4.AutoGenerated">
            <summary>The automatically generated a local variable.</summary>
        </member>
        <member name="F:ZennoLab.InterfacesLibrary.ProjectModel.Enums.VariableGroupTypeV4.UserDefined">
            <summary>The user-defined local variable.</summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProjectModel.LastError">
            <summary>Contains information of last error of project.</summary>
            <remarks>This class can be used in action OwnCode (C# or PHP) of ProjectMaker.</remarks>
            <example>
            The following example uses method <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.GetLastError">GetLastError</see> of "project" for getting last error of project.
            <code title="Example" description="" lang="C#">
            LastError error = project.GetLastError();
            string tmp = "";
            if(error != null)
                tmp = string.Format("ActionComment: {0}.\r\nActionGroupId: {1}.\r\nActionId: {2}", error.ActionComment, error.ActionGroupId, error.ActionId);
             
            return tmp;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.LastError.ActionId">
            <summary>Gets an ID of action with an error.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>An ID of action with an error.</para>
            </value>
            <example>
            The following example uses method <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.GetLastError">GetLastError</see> of "project" for getting last error of project.
            <code title="Example" description="" lang="C#">
            LastError error = project.GetLastError();
            string tmp = "";
            if(error != null)
                tmp = string.Format("ActionComment: {0}.\r\nActionGroupId: {1}.\r\nActionId: {2}", error.ActionComment, error.ActionGroupId, error.ActionId);
             
            return tmp;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.LastError.ActionGroupId">
            <summary>Gets an ID of group of action with an error.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>An ID of group of action with an error.</para>
            </value>
            <example>
            The following example uses method <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.GetLastError">GetLastError</see> of "project" for getting last error of project.
            <code title="Example" description="" lang="C#">
            LastError error = project.GetLastError();
            string tmp = "";
            if(error != null)
                tmp = string.Format("ActionComment: {0}.\r\nActionGroupId: {1}.\r\nActionId: {2}", error.ActionComment, error.ActionGroupId, error.ActionId);
             
            return tmp;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.ProjectModel.LastError.ActionComment">
            <summary>Gets a comment of action with an error.</summary>
            <value>
            	<para>Type: <see cref="!:http://msdn.microsoft.com/en-us/library/system.string.aspx">System.String</see></para>
            	<para>A comment of action with an error.</para>
            </value>
            <example>
            The following example uses method <see cref="M:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel.GetLastError">GetLastError</see> of "project" for getting last error of project.
            <code title="Example" description="" lang="C#">
            LastError error = project.GetLastError();
            string tmp = "";
            if(error != null)
                tmp = string.Format("ActionComment: {0}.\r\nActionGroupId: {1}.\r\nActionId: {2}", error.ActionComment, error.ActionGroupId, error.ActionId);
             
            return tmp;</code></example>
            <requirements>
            	<para>
            		<b>Target Platforms:</b> Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family, Windows Vista, Windows Server 2008 family, Windows
            Seven</para>
            </requirements>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ProxyChecker.IProxyCheckerService">
            <summary> Wcf service contract for working with ProxyChecker </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProxyChecker.IProxyCheckerService.SetThreadCountForProcess(System.Int32)">
             <summary> Set count of threads per one checking processor </summary>
            <param name="count"> count </param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProxyChecker.IProxyCheckerService.AddResource(System.String)">
            <summary> Add resource </summary>
            <param name="url"> adress </param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProxyChecker.IProxyCheckerService.SetDownloadThreadCount(System.Int32)">
            <summary> Set count of threads to download </summary>
            <param name="count"> count </param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProxyChecker.IProxyCheckerService.SetCheckThreadCount(System.Int32)">
            <summary> Set count of theads to check </summary>
            <param name="count"> count </param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProxyChecker.IProxyCheckerService.GetAliveProxies">
            <summary> Get list of alive proxies </summary>
            <returns> list of alive proxies </returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ProxyChecker.IProxyCheckerService.HasAliveProxies">
            <summary> Are there any alive proxy </summary>
            <returns> true if there are; otherwise false </returns>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.Spintax.ICommonSpintaxModuleInterface">
            <summary> interface for spintax modules </summary>
        </member>
        <!-- Некорректный комментарий в формате XML для члена "M:ZennoLab.InterfacesLibrary.Spintax.ICommonSpintaxModuleInterface.SpinTheArticle(System.String,System.Int32,System.String)" проигнорирован -->
        <member name="T:ZennoLab.InterfacesLibrary.Spintax.IConfigurableSpintaxModule">
            <summary> Interface for module configuration </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.Spintax.IConfigurableSpintaxModule.ServiceName">
            <summary> Service name (e.g. wordai.com) </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.Spintax.IConfigurableSpintaxModule.Login">
            <summary> Login for service, if required </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.Spintax.IConfigurableSpintaxModule.Password">
            <summary> Password for service, if required </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.Spintax.IConfigurableSpintaxModule.AdditionalParameters">
            <summary> addtinional parameters, if required </summary>
        </member>
        <member name="P:ZennoLab.InterfacesLibrary.Spintax.IConfigurableSpintaxModule.AdditionalParametersHint">
            <summary> Hint in the user interface, if required </summary>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ZennoPoster.IBaseManager">
            <summary>  </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IBaseManager.RunInstance">
            <summary> </summary>
            <returns></returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IBaseManager.StopInstance(System.Int32,System.Boolean)">
            <summary> </summary>
            <param name="port"></param>
            <param name="forceRestart"></param>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ZennoPoster.ICommonTaskManager">
            <summary> Common fuction for all TaskManager </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ICommonTaskManager.IsTasksActive(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary> check tasks activity </summary>
            <param name="ids"> list of tasks ids </param>
            <returns> true if list have active tasks </returns>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService">
            <summary> Wcf service contract for working with instances </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.GetAllInstances">
            <summary> Get array of all active instances </summary>
            <returns>array of the instances</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.GetNewInstance(System.String@,System.Int32@,System.String@)">
            <summary> Get the instance </summary>
            <param name="url">Address of the host pipe for instance (127.0.0.1)</param>
            <param name="port">Port of instance</param>
            <param name="address">Mode of instance</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.ShowInstance(System.String,System.Int32,System.String)">
            <summary> Show the instance </summary>
            <param name="url">Address of the host pipe for instance (127.0.0.1)</param>
            <param name="port">Port of instance</param>
            <param name="address">Mode of instance</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.HideInstance(System.String,System.Int32,System.String)">
            <summary> Hide the instance </summary>
            <param name="url">Address of the host pipe for instance (127.0.0.1)</param>
            <param name="port">Port of instance</param>
            <param name="address">Mode of instance</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.ReleaseInstance(System.String,System.Int32,System.String)">
            <summary> Release the instance </summary>
            <param name="url">Address of the host pipe for instance (127.0.0.1)</param>
            <param name="port">Port of instance</param>
            <param name="address">Mode of instance</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.CaptchaSpecialRecognition(System.String,System.Object)">
            <summary> Captcha recognition </summary>
            <param name="dllName">The path to the library recognizers captchas</param>
            <param name="instance">Instance object</param>
            <returns>Recognition result</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.CaptchaRecognition(System.String,System.String,System.String)">
            <summary> Captcha recognition </summary>
            <param name="dllName">The path to the library recognizers captchas</param>
            <param name="captcha">Captcha</param>
            <param name="parameters">Parameters</param>
            <returns>Recognition result</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.CaptchaRecognitionMulti(System.String,System.String[],System.String)">
            <summary> Captcha recognition </summary>
            <param name="dllName">The path to the library recognizers captchas</param>
            <param name="captchas64Str">Captchas</param>
            <param name="parameters">Parameters</param>
            <returns>Recognition result</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.ContextRecognition(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Context recognition
            </summary>
            <param name="text">The text for recognition</param>
            <param name="themesType">The subject type. It can be: <b>general</b> or <b>detailed</b></param>
            <param name="maxThemes">The maximum count of the themes</param>
            <param name="relevance">The minimun relevance for the themes</param>
            <returns>The string which contains the all suitable themes written via separator</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.MailConfirm(System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32)">
            <summary>
             Confirmation email
            </summary>
            <param name="timeoutSec">Request timed out. Three timeout written through ";"</param>
            <param name="login">Login</param>
            <param name="pass">Password</param>
            <param name="server">Mail server</param>
            <param name="port">Port</param>
            <param name="useSSL">Use SSL</param>
            <param name="useHTML">Use HTML</param>
            <param name="useIMAP">Use IMAP</param>
            <param name="removeMessages">Delete messages</param>
            <param name="identityRegExp">Regular expression to identify the message</param>
            <param name="parserRegExp">Regular expression to parse the message</param>
            <param name="machNum">Match number</param>
            <returns>Result of confirmation email</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.ValidateEmail(System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
             Validate email
            </summary>
            <param name="login">Login</param>
            <param name="pass">Password</param>
            <param name="server">Mail server</param>
            <param name="port">Port</param>
            <param name="useSSL">Use SSL</param>
            <param name="useHTML">Use HTML</param>
            <param name="useIMAP">Use IMAP</param>
            <returns>Result of confirmation email</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.SendTaskToDownloadMails(System.String,System.String,System.String,System.Int32,System.Boolean,ZennoLab.InterfacesLibrary.Enums.Email.EmailProtocol,System.Int32,System.Int32,System.Boolean)">
            <summary> download all emails </summary>
            <param name="login"></param>
            <param name="pass"></param>
            <param name="server"></param>
            <param name="port"></param>
            <param name="useSSL"></param>
            <param name="protocol"></param>
            <param name="lastHours"></param>
            <param name="maxCount"></param>
            <param name="deleteMessages"> </param>
            <returns></returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.GetMailTaskStatus(System.String)">
            <summary> checks the email task status </summary>
            <param name="taskId"> task id </param>
            <returns></returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.GetDownloadedEmails(System.String)">
            <summary> recieves an array of emails of completed task</summary>
            <param name="taskId">task id</param>
            <returns>tuple.Item1 - sibject, tuple.Item2 - from, tuple.Item3 - html message, tuple.Item4 - text message</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.GetProxy(System.String,System.Boolean)">
            <summary> Get a proxy with removal</summary>
            <param name="filterName">Filter for proxies</param>
            <param name="canonical">Set "true" to get canonical format of address</param>
            <returns>Proxy</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.GetProxyWithOutDelete(System.String,System.Boolean)">
            <summary>
             Get a proxy without removal
            </summary>
            <param name="filterName">Filter for proxies</param>
             <param name="canonical">Set "true" to get canonical format of address</param>
            <returns>Proxy</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.FtpDownload(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
             Download from the url by FTP
            </summary>
            <param name="host">Ftp server adress</param>
            <param name="port">Ftp server port</param>
             <param name="protocol">Protocol (FTP, sFTP, FTPs)</param>
            <param name="login">Login</param>
            <param name="pass">Password</param>
            <param name="proxy">Proxy</param>
            <param name="name">Path to file on server</param>
            <param name="localPath">Path to save</param>
            <param name="activeMode"></param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.FtpUploadFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
             Upload to the url by FTP
            </summary>
            <param name="host">Ftp server adress</param>
            <param name="port">Ftp server port</param>
             <param name="protocol">Protocol (FTP, sFTP, FTPs)</param>
            <param name="login">Login</param>
            <param name="pass">Password</param>
            <param name="proxy">Proxy</param>
            <param name="serverPath">Path to save on server</param>
            <param name="localPath">Path to file</param>
            <param name="activeMode"></param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.FtpUploadDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
             Upload to the url by FTP
            </summary>
            <param name="host">Ftp server adress</param>
            <param name="port">Ftp server port</param>
             <param name="protocol">Protocol (FTP, sFTP, FTPs)</param>
            <param name="login">Login</param>
            <param name="pass">Password</param>
            <param name="proxy">Proxy</param>
            <param name="serverPath">Path to save on server</param>
            <param name="localPath">Path to directory</param>
            <param name="recursive">Recursive upload</param>
            <param name="uncludeRootName">Create the root directory on ftp server</param>
            <param name="activeMode"></param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.FtpDeleteFile(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
             Remove the file
            </summary>
            <param name="host">Ftp server adress</param>
            <param name="port">Ftp server port</param>
             <param name="protocol">Protocol (FTP, sFTP, FTPs)</param>
            <param name="login">Login</param>
            <param name="pass">Password</param>
            <param name="proxy">Proxy</param>
            <param name="name">Path to file on server</param>
            <param name="activeMode"></param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.FtpChmode(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
             Remove the file
            </summary>
            <param name="host">Ftp server adress</param>
            <param name="port">Ftp server port</param>
             <param name="protocol">Protocol (FTP, sFTP, FTPs)</param>
            <param name="login">Login</param>
            <param name="pass">Password</param>
            <param name="proxy">Proxy</param>
            <param name="name">Path to the item on server</param>
            <param name="mode">Mode of file</param>
            <param name="activeMode"></param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.FtpDeleteDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
             Remove the directory
            </summary>
            <param name="host">Ftp server adress</param>
            <param name="port">Ftp server port</param>
             <param name="protocol">Protocol (FTP, sFTP, FTPs)</param>
            <param name="login">Login</param>
            <param name="pass">Password</param>
            <param name="proxy">Proxy</param>
            <param name="name">Path to directory on server</param>
            <param name="activeMode"></param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.FtpCreateDirectory(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Create the directory.
            </summary>
            <param name="host">Ftp server adress</param>
            <param name="port">Ftp server port</param>
            <param name="protocol">Protocol (FTP, sFTP, FTPs)</param>
            <param name="login">Login</param>
            <param name="pass">Password</param>
            <param name="proxy">Proxy</param>
            <param name="name">Path to directory on server</param>
            <param name="activeMode"></param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.FtpGetList(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
             Get files list
            </summary>
            <param name="host">Ftp server adress</param>
            <param name="port">Ftp server port</param>
             <param name="protocol">Protocol (FTP, sFTP, FTPs)</param>
            <param name="login">Login</param>
            <param name="pass">Password</param>
            <param name="proxy">Proxy</param>
            <param name="directoryName">Path to directory on server</param>
            <param name="recursive">Use recursion</param>
            <param name="includeDirectory">Include directories</param>
            <param name="activeMode"></param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.HttpGet(System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String)">
            <summary> Execute http get request </summary>
            <returns> result of the requset </returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.HttpGetBytes(System.String,System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[])">
            <summary> Execute http get request </summary>
            <returns> result byte array of the requset </returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.HttpPost(System.String,System.String,System.String,System.String,System.String,ZennoLab.InterfacesLibrary.Enums.Http.ResponceType,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[],System.String)">
            <summary> Execute http post request </summary>
            <returns> result of the requset </returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.IInstanceManagerService.HttpPostBytes(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String[])">
            <summary> Execute http post request </summary>
            <returns> result byte array of the requset </returns>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService">
            <summary> Wcf service contract for working with ZennoPoster tasks </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.TasksList">
            <summary> Get list of tasks </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.GetTaskInfo(System.Guid)">
            <summary>Get info of the task </summary>
            <param name="id">Id of task</param>
            <returns>Info of the task</returns>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.StopTask(System.Guid)">
            <summary> Stop the task </summary>
            <param name="id">Id of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.InterruptTask(System.Guid)">
            <summary> Interrupt the task </summary>
            <param name="id">Id of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.StartTask(System.Guid)">
            <summary> Start the task </summary>
            <param name="id">Id of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.AddTries(System.Guid,System.Int32)">
            <summary> Add tries to the task </summary>
            <param name="id">Id of task</param>
            <param name="count">Count of tries</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.SetTries(System.Guid,System.Int32)">
            <summary> Set tries to the task </summary>
            <param name="id">Id of task</param>
            <param name="count">Count of tries</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.ClearSucces(System.Guid)">
            <summary> Clear success count of the task </summary>
            <param name="id">Id of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.ClearFails(System.Guid)">
            <summary> Clear fail count of the task </summary>
            <param name="id">Id of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.SetExecutionSettings(System.Guid,System.String)">
            <summary> Set the execution settings </summary>
            <param name="id">Id of task</param>
            <param name="executionSettings">Settings in xml format</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.SetSchedulerSettings(System.Guid,System.String)">
            <summary> Set the scheduler settings </summary>
            <param name="id">Id of task</param>
            <param name="schedulerSettings">Settings in xml format</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.ExportInputSettings(System.Guid)">
            <summary> Export input settings </summary>
            <param name="id">Id of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.ImportInputSettings(System.Guid,System.String)">
            <summary> Import input settings </summary>
            <param name="id">Id of task</param>
            <param name="source">Settings in xml format</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.StopTaskByName(System.String)">
            <summary> Stop the task </summary>
            <param name="name">Name of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.InterruptTaskByName(System.String)">
            <summary> Interrupt the task </summary>
            <param name="name">Name of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.StartTaskByName(System.String)">
            <summary> Start the task </summary>
            <param name="name">Name of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.AddTriesByName(System.String,System.Int32)">
            <summary> Add tries to the task </summary>
            <param name="name">Name of task</param>
            <param name="count">Count of tries</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.SetTriesByName(System.String,System.Int32)">
            <summary> Set tries to the task </summary>
            <param name="name">Name of task</param>
            <param name="count">Count of tries</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.ClearSuccesByName(System.String)">
            <summary> Clear success count of the task </summary>
            <param name="name">Name of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.ClearFailsByName(System.String)">
            <summary> Clear fails count of the task </summary>
            <param name="name">Name of task</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.SetExecutionSettingsByName(System.String,System.String)">
            <summary> Set the execution settings </summary>
            <param name="name">Name of task</param>
            <param name="executionSettings">Settings in xml format</param>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITaskManagerService.SetSchedulerSettingsByName(System.String,System.String)">
            <summary> Set the scheduler settings </summary>
            <param name="name">Name of task</param>
            <param name="schedulerSettings">Settings in xml format</param>
        </member>
        <member name="T:ZennoLab.InterfacesLibrary.ZennoPoster.ITasksRunner">
            <summary> Wcf service contract for working with TaskRunner </summary>
        </member>
        <member name="M:ZennoLab.InterfacesLibrary.ZennoPoster.ITasksRunner.RunTask(System.String[])">
            <summary> Execute task </summary>
            <param name="args">Task</param>
            <returns>true if successfully</returns>
        </member>
    </members>
</doc>
